var searchIndex = {};
searchIndex["clang_sys"] = {"doc":"Rust bindings for `libclang`.","items":[[3,"CXCodeComplete_Flags","clang_sys","",null,null],[3,"CXCompletionContext","","",null,null],[3,"CXDiagnosticDisplayOptions","","",null,null],[3,"CXGlobalOptFlags","","",null,null],[3,"CXIdxDeclInfoFlags","","",null,null],[3,"CXIndexOptFlags","","",null,null],[3,"CXNameRefFlags","","",null,null],[3,"CXObjCDeclQualifierKind","","",null,null],[3,"CXObjCPropertyAttrKind","","",null,null],[3,"CXReparse_Flags","","",null,null],[3,"CXSaveTranslationUnit_Flags","","",null,null],[3,"CXTranslationUnit_Flags","","",null,null],[3,"CXCompilationDatabase","","",null,null],[12,"0","","",0,null],[3,"CXCompileCommand","","",null,null],[12,"0","","",1,null],[3,"CXCompileCommands","","",null,null],[12,"0","","",2,null],[3,"CXCompletionString","","",null,null],[12,"0","","",3,null],[3,"CXCursorSet","","",null,null],[12,"0","","",4,null],[3,"CXDiagnostic","","",null,null],[12,"0","","",5,null],[3,"CXDiagnosticSet","","",null,null],[12,"0","","",6,null],[3,"CXFile","","",null,null],[12,"0","","",7,null],[3,"CXIdxClientASTFile","","",null,null],[12,"0","","",8,null],[3,"CXIdxClientContainer","","",null,null],[12,"0","","",9,null],[3,"CXIdxClientEntity","","",null,null],[12,"0","","",10,null],[3,"CXIdxClientFile","","",null,null],[12,"0","","",11,null],[3,"CXIndex","","",null,null],[12,"0","","",12,null],[3,"CXIndexAction","","",null,null],[12,"0","","",13,null],[3,"CXModule","","",null,null],[12,"0","","",14,null],[3,"CXRemapping","","",null,null],[12,"0","","",15,null],[3,"CXTranslationUnit","","",null,null],[12,"0","","",16,null],[3,"CXCodeCompleteResults","","",null,null],[12,"Results","","",17,null],[12,"NumResults","","",17,null],[3,"CXCompletionResult","","",null,null],[12,"CursorKind","","",18,null],[12,"CompletionString","","",18,null],[3,"CXCursor","","",null,null],[12,"kind","","",19,null],[12,"xdata","","",19,null],[12,"data","","",19,null],[3,"CXCursorAndRangeVisitor","","",null,null],[12,"context","","",20,null],[12,"visit","","",20,null],[3,"CXFileUniqueID","","",null,null],[12,"data","","",21,null],[3,"CXIdxAttrInfo","","",null,null],[12,"kind","","",22,null],[12,"cursor","","",22,null],[12,"loc","","",22,null],[3,"CXIdxBaseClassInfo","","",null,null],[12,"base","","",23,null],[12,"cursor","","",23,null],[12,"loc","","",23,null],[3,"CXIdxCXXClassDeclInfo","","",null,null],[12,"declInfo","","",24,null],[12,"bases","","",24,null],[12,"numBases","","",24,null],[3,"CXIdxContainerInfo","","",null,null],[12,"cursor","","",25,null],[3,"CXIdxDeclInfo","","",null,null],[12,"entityInfo","","",26,null],[12,"cursor","","",26,null],[12,"loc","","",26,null],[12,"semanticContainer","","",26,null],[12,"lexicalContainer","","",26,null],[12,"isRedeclaration","","",26,null],[12,"isDefinition","","",26,null],[12,"isContainer","","",26,null],[12,"declAsContainer","","",26,null],[12,"isImplicit","","",26,null],[12,"attributes","","",26,null],[12,"numAttributes","","",26,null],[12,"flags","","",26,null],[3,"CXIdxEntityInfo","","",null,null],[12,"kind","","",27,null],[12,"templateKind","","",27,null],[12,"lang","","",27,null],[12,"name","","",27,null],[12,"USR","","",27,null],[12,"cursor","","",27,null],[12,"attributes","","",27,null],[12,"numAttributes","","",27,null],[3,"CXIdxEntityRefInfo","","",null,null],[12,"kind","","",28,null],[12,"cursor","","",28,null],[12,"loc","","",28,null],[12,"referencedEntity","","",28,null],[12,"parentEntity","","",28,null],[12,"container","","",28,null],[3,"CXIdxIBOutletCollectionAttrInfo","","",null,null],[12,"attrInfo","","",29,null],[12,"objcClass","","",29,null],[12,"classCursor","","",29,null],[12,"classLoc","","",29,null],[3,"CXIdxImportedASTFileInfo","","",null,null],[12,"file","","",30,null],[12,"module","","",30,null],[12,"loc","","",30,null],[12,"isImplicit","","",30,null],[3,"CXIdxIncludedFileInfo","","",null,null],[12,"hashLoc","","",31,null],[12,"filename","","",31,null],[12,"file","","",31,null],[12,"isImport","","",31,null],[12,"isAngled","","",31,null],[12,"isModuleImport","","",31,null],[3,"CXIdxLoc","","",null,null],[12,"ptr_data","","",32,null],[12,"int_data","","",32,null],[3,"CXIdxObjCCategoryDeclInfo","","",null,null],[12,"containerInfo","","",33,null],[12,"objcClass","","",33,null],[12,"classCursor","","",33,null],[12,"classLoc","","",33,null],[12,"protocols","","",33,null],[3,"CXIdxObjCContainerDeclInfo","","",null,null],[12,"declInfo","","",34,null],[12,"kind","","",34,null],[3,"CXIdxObjCInterfaceDeclInfo","","",null,null],[12,"containerInfo","","",35,null],[12,"superInfo","","",35,null],[12,"protocols","","",35,null],[3,"CXIdxObjCPropertyDeclInfo","","",null,null],[12,"declInfo","","",36,null],[12,"getter","","",36,null],[12,"setter","","",36,null],[3,"CXIdxObjCProtocolRefInfo","","",null,null],[12,"protocol","","",37,null],[12,"cursor","","",37,null],[12,"loc","","",37,null],[3,"CXIdxObjCProtocolRefListInfo","","",null,null],[12,"protocols","","",38,null],[12,"numProtocols","","",38,null],[3,"CXPlatformAvailability","","",null,null],[12,"Platform","","",39,null],[12,"Introduced","","",39,null],[12,"Deprecated","","",39,null],[12,"Obsoleted","","",39,null],[12,"Unavailable","","",39,null],[12,"Message","","",39,null],[3,"CXSourceLocation","","",null,null],[12,"ptr_data","","",40,null],[12,"int_data","","",40,null],[3,"CXSourceRange","","",null,null],[12,"ptr_data","","",41,null],[12,"begin_int_data","","",41,null],[12,"end_int_data","","",41,null],[3,"CXSourceRangeList","","",null,null],[12,"count","","",42,null],[12,"ranges","","",42,null],[3,"CXString","","",null,null],[12,"data","","",43,null],[12,"private_flags","","",43,null],[3,"CXTUResourceUsage","","",null,null],[12,"data","","",44,null],[12,"numEntries","","",44,null],[12,"entries","","",44,null],[3,"CXTUResourceUsageEntry","","",null,null],[12,"kind","","",45,null],[12,"amount","","",45,null],[3,"CXToken","","",null,null],[12,"int_data","","",46,null],[12,"ptr_data","","",46,null],[3,"CXType","","",null,null],[12,"kind","","",47,null],[12,"data","","",47,null],[3,"CXUnsavedFile","","",null,null],[12,"Filename","","",48,null],[12,"Contents","","",48,null],[12,"Length","","",48,null],[3,"CXVersion","","",null,null],[12,"Major","","",49,null],[12,"Minor","","",49,null],[12,"Subminor","","",49,null],[3,"IndexerCallbacks","","",null,null],[12,"abortQuery","","",50,null],[12,"diagnostic","","",50,null],[12,"enteredMainFile","","",50,null],[12,"ppIncludedFile","","",50,null],[12,"importedASTFile","","",50,null],[12,"startedTranslationUnit","","",50,null],[12,"indexDeclaration","","",50,null],[12,"indexEntityReference","","",50,null],[4,"CXAvailabilityKind","","",null,null],[13,"Available","","",51,null],[13,"Deprecated","","",51,null],[13,"NotAvailable","","",51,null],[13,"NotAccessible","","",51,null],[4,"CXCallingConv","","",null,null],[13,"Default","","",52,null],[13,"C","","",52,null],[13,"X86StdCall","","",52,null],[13,"X86FastCall","","",52,null],[13,"X86ThisCall","","",52,null],[13,"X86Pascal","","",52,null],[13,"AAPCS","","",52,null],[13,"AAPCS_VFP","","",52,null],[13,"IntelOclBicc","","",52,null],[13,"X86_64Win64","","",52,null],[13,"X86_64SysV","","",52,null],[13,"X86VectorCall","","",52,null],[13,"Invalid","","",52,null],[13,"Unexposed","","",52,null],[4,"CXChildVisitResult","","",null,null],[13,"Break","","",53,null],[13,"Continue","","",53,null],[13,"Recurse","","",53,null],[4,"CXCompilationDatabase_Error","","",null,null],[13,"NoError","","",54,null],[13,"CanNotLoadDatabase","","",54,null],[4,"CXCompletionChunkKind","","",null,null],[13,"Optional","","",55,null],[13,"TypedText","","",55,null],[13,"Text","","",55,null],[13,"Placeholder","","",55,null],[13,"Informative","","",55,null],[13,"CurrentParameter","","",55,null],[13,"LeftParen","","",55,null],[13,"RightParen","","",55,null],[13,"LeftBracket","","",55,null],[13,"RightBracket","","",55,null],[13,"LeftBrace","","",55,null],[13,"RightBrace","","",55,null],[13,"LeftAngle","","",55,null],[13,"RightAngle","","",55,null],[13,"Comma","","",55,null],[13,"ResultType","","",55,null],[13,"Colon","","",55,null],[13,"SemiColon","","",55,null],[13,"Equal","","",55,null],[13,"HorizontalSpace","","",55,null],[13,"VerticalSpace","","",55,null],[4,"CXCursorKind","","",null,null],[13,"UnexposedDecl","","",56,null],[13,"StructDecl","","",56,null],[13,"UnionDecl","","",56,null],[13,"ClassDecl","","",56,null],[13,"EnumDecl","","",56,null],[13,"FieldDecl","","",56,null],[13,"EnumConstantDecl","","",56,null],[13,"FunctionDecl","","",56,null],[13,"VarDecl","","",56,null],[13,"ParmDecl","","",56,null],[13,"ObjCInterfaceDecl","","",56,null],[13,"ObjCCategoryDecl","","",56,null],[13,"ObjCProtocolDecl","","",56,null],[13,"ObjCPropertyDecl","","",56,null],[13,"ObjCIvarDecl","","",56,null],[13,"ObjCInstanceMethodDecl","","",56,null],[13,"ObjCClassMethodDecl","","",56,null],[13,"ObjCImplementationDecl","","",56,null],[13,"ObjCCategoryImplDecl","","",56,null],[13,"TypedefDecl","","",56,null],[13,"CXXMethod","","",56,null],[13,"Namespace","","",56,null],[13,"LinkageSpec","","",56,null],[13,"Constructor","","",56,null],[13,"Destructor","","",56,null],[13,"ConversionFunction","","",56,null],[13,"TemplateTypeParameter","","",56,null],[13,"NonTypeTemplateParameter","","",56,null],[13,"TemplateTemplateParameter","","",56,null],[13,"FunctionTemplate","","",56,null],[13,"ClassTemplate","","",56,null],[13,"ClassTemplatePartialSpecialization","","",56,null],[13,"NamespaceAlias","","",56,null],[13,"UsingDirective","","",56,null],[13,"UsingDeclaration","","",56,null],[13,"TypeAliasDecl","","",56,null],[13,"ObjCSynthesizeDecl","","",56,null],[13,"ObjCDynamicDecl","","",56,null],[13,"CXXAccessSpecifier","","",56,null],[13,"ObjCSuperClassRef","","",56,null],[13,"ObjCProtocolRef","","",56,null],[13,"ObjCClassRef","","",56,null],[13,"TypeRef","","",56,null],[13,"CXXBaseSpecifier","","",56,null],[13,"TemplateRef","","",56,null],[13,"NamespaceRef","","",56,null],[13,"MemberRef","","",56,null],[13,"LabelRef","","",56,null],[13,"OverloadedDeclRef","","",56,null],[13,"VariableRef","","",56,null],[13,"InvalidFile","","",56,null],[13,"NoDeclFound","","",56,null],[13,"NotImplemented","","",56,null],[13,"InvalidCode","","",56,null],[13,"UnexposedExpr","","",56,null],[13,"DeclRefExpr","","",56,null],[13,"MemberRefExpr","","",56,null],[13,"CallExpr","","",56,null],[13,"ObjCMessageExpr","","",56,null],[13,"BlockExpr","","",56,null],[13,"IntegerLiteral","","",56,null],[13,"FloatingLiteral","","",56,null],[13,"ImaginaryLiteral","","",56,null],[13,"StringLiteral","","",56,null],[13,"CharacterLiteral","","",56,null],[13,"ParenExpr","","",56,null],[13,"UnaryOperator","","",56,null],[13,"ArraySubscriptExpr","","",56,null],[13,"BinaryOperator","","",56,null],[13,"CompoundAssignOperator","","",56,null],[13,"ConditionalOperator","","",56,null],[13,"CStyleCastExpr","","",56,null],[13,"CompoundLiteralExpr","","",56,null],[13,"InitListExpr","","",56,null],[13,"AddrLabelExpr","","",56,null],[13,"StmtExpr","","",56,null],[13,"GenericSelectionExpr","","",56,null],[13,"GNUNullExpr","","",56,null],[13,"CXXStaticCastExpr","","",56,null],[13,"CXXDynamicCastExpr","","",56,null],[13,"CXXReinterpretCastExpr","","",56,null],[13,"CXXConstCastExpr","","",56,null],[13,"CXXFunctionalCastExpr","","",56,null],[13,"CXXTypeidExpr","","",56,null],[13,"CXXBoolLiteralExpr","","",56,null],[13,"CXXNullPtrLiteralExpr","","",56,null],[13,"CXXThisExpr","","",56,null],[13,"CXXThrowExpr","","",56,null],[13,"CXXNewExpr","","",56,null],[13,"CXXDeleteExpr","","",56,null],[13,"UnaryExpr","","",56,null],[13,"ObjCStringLiteral","","",56,null],[13,"ObjCEncodeExpr","","",56,null],[13,"ObjCSelectorExpr","","",56,null],[13,"ObjCProtocolExpr","","",56,null],[13,"ObjCBridgedCastExpr","","",56,null],[13,"PackExpansionExpr","","",56,null],[13,"SizeOfPackExpr","","",56,null],[13,"LambdaExpr","","",56,null],[13,"ObjCBoolLiteralExpr","","",56,null],[13,"ObjCSelfExpr","","",56,null],[13,"UnexposedStmt","","",56,null],[13,"LabelStmt","","",56,null],[13,"CompoundStmt","","",56,null],[13,"CaseStmt","","",56,null],[13,"DefaultStmt","","",56,null],[13,"IfStmt","","",56,null],[13,"SwitchStmt","","",56,null],[13,"WhileStmt","","",56,null],[13,"DoStmt","","",56,null],[13,"ForStmt","","",56,null],[13,"GotoStmt","","",56,null],[13,"IndirectGotoStmt","","",56,null],[13,"ContinueStmt","","",56,null],[13,"BreakStmt","","",56,null],[13,"ReturnStmt","","",56,null],[13,"AsmStmt","","Duplicate of `GccAsmStmt`.",56,null],[13,"ObjCAtTryStmt","","",56,null],[13,"ObjCAtCatchStmt","","",56,null],[13,"ObjCAtFinallyStmt","","",56,null],[13,"ObjCAtThrowStmt","","",56,null],[13,"ObjCAtSynchronizedStmt","","",56,null],[13,"ObjCAutoreleasePoolStmt","","",56,null],[13,"ObjCForCollectionStmt","","",56,null],[13,"CXXCatchStmt","","",56,null],[13,"CXXTryStmt","","",56,null],[13,"CXXForRangeStmt","","",56,null],[13,"SEHTryStmt","","",56,null],[13,"SEHExceptStmt","","",56,null],[13,"SEHFinallyStmt","","",56,null],[13,"MSAsmStmt","","",56,null],[13,"NullStmt","","",56,null],[13,"DeclStmt","","",56,null],[13,"OMPParallelDirective","","",56,null],[13,"OMPSimdDirective","","",56,null],[13,"OMPForDirective","","",56,null],[13,"OMPSectionsDirective","","",56,null],[13,"OMPSectionDirective","","",56,null],[13,"OMPSingleDirective","","",56,null],[13,"OMPParallelForDirective","","",56,null],[13,"OMPParallelSectionsDirective","","",56,null],[13,"OMPTaskDirective","","",56,null],[13,"OMPMasterDirective","","",56,null],[13,"OMPCriticalDirective","","",56,null],[13,"OMPTaskyieldDirective","","",56,null],[13,"OMPBarrierDirective","","",56,null],[13,"OMPTaskwaitDirective","","",56,null],[13,"OMPFlushDirective","","",56,null],[13,"SEHLeaveStmt","","",56,null],[13,"OMPOrderedDirective","","",56,null],[13,"OMPAtomicDirective","","",56,null],[13,"OMPForSimdDirective","","",56,null],[13,"OMPParallelForSimdDirective","","",56,null],[13,"OMPTargetDirective","","",56,null],[13,"OMPTeamsDirective","","",56,null],[13,"OMPTaskgroupDirective","","",56,null],[13,"OMPCancellationPointDirective","","",56,null],[13,"OMPCancelDirective","","",56,null],[13,"TranslationUnit","","",56,null],[13,"UnexposedAttr","","",56,null],[13,"IBActionAttr","","",56,null],[13,"IBOutletAttr","","",56,null],[13,"IBOutletCollectionAttr","","",56,null],[13,"CXXFinalAttr","","",56,null],[13,"CXXOverrideAttr","","",56,null],[13,"AnnotateAttr","","",56,null],[13,"AsmLabelAttr","","",56,null],[13,"PackedAttr","","",56,null],[13,"PureAttr","","",56,null],[13,"ConstAttr","","",56,null],[13,"NoDuplicateAttr","","",56,null],[13,"CUDAConstantAttr","","",56,null],[13,"CUDADeviceAttr","","",56,null],[13,"CUDAGlobalAttr","","",56,null],[13,"CUDAHostAttr","","",56,null],[13,"CUDASharedAttr","","",56,null],[13,"PreprocessingDirective","","",56,null],[13,"MacroDefinition","","",56,null],[13,"MacroExpansion","","Duplicate of `MacroInstantiation`.",56,null],[13,"InclusionDirective","","",56,null],[13,"ModuleImportDecl","","",56,null],[13,"OverloadCandidate","","",56,null],[4,"CXDiagnosticSeverity","","",null,null],[13,"Ignored","","",57,null],[13,"Note","","",57,null],[13,"Warning","","",57,null],[13,"Error","","",57,null],[13,"Fatal","","",57,null],[4,"CXErrorCode","","",null,null],[13,"Success","","",58,null],[13,"Failure","","",58,null],[13,"Crashed","","",58,null],[13,"InvalidArguments","","",58,null],[13,"ASTReadError","","",58,null],[4,"CXIdxAttrKind","","",null,null],[13,"Unexposed","","",59,null],[13,"IBAction","","",59,null],[13,"IBOutlet","","",59,null],[13,"IBOutletCollection","","",59,null],[4,"CXIdxEntityCXXTemplateKind","","",null,null],[13,"NonTemplate","","",60,null],[13,"Template","","",60,null],[13,"TemplatePartialSpecialization","","",60,null],[13,"TemplateSpecialization","","",60,null],[4,"CXIdxEntityKind","","",null,null],[13,"Unexposed","","",61,null],[13,"Typedef","","",61,null],[13,"Function","","",61,null],[13,"Variable","","",61,null],[13,"Field","","",61,null],[13,"EnumConstant","","",61,null],[13,"ObjCClass","","",61,null],[13,"ObjCProtocol","","",61,null],[13,"ObjCCategory","","",61,null],[13,"ObjCInstanceMethod","","",61,null],[13,"ObjCClassMethod","","",61,null],[13,"ObjCProperty","","",61,null],[13,"ObjCIvar","","",61,null],[13,"Enum","","",61,null],[13,"Struct","","",61,null],[13,"Union","","",61,null],[13,"CXXClass","","",61,null],[13,"CXXNamespace","","",61,null],[13,"CXXNamespaceAlias","","",61,null],[13,"CXXStaticVariable","","",61,null],[13,"CXXStaticMethod","","",61,null],[13,"CXXInstanceMethod","","",61,null],[13,"CXXConstructor","","",61,null],[13,"CXXDestructor","","",61,null],[13,"CXXConversionFunction","","",61,null],[13,"CXXTypeAlias","","",61,null],[13,"CXXInterface","","",61,null],[4,"CXIdxEntityLanguage","","",null,null],[13,"None","","",62,null],[13,"C","","",62,null],[13,"ObjC","","",62,null],[13,"CXX","","",62,null],[4,"CXIdxEntityRefKind","","",null,null],[13,"Direct","","",63,null],[13,"Implicit","","",63,null],[4,"CXIdxObjCContainerKind","","",null,null],[13,"ForwardRef","","",64,null],[13,"Interface","","",64,null],[13,"Implementation","","",64,null],[4,"CXLanguageKind","","",null,null],[13,"Invalid","","",65,null],[13,"C","","",65,null],[13,"ObjC","","",65,null],[13,"CPlusPlus","","",65,null],[4,"CXLinkageKind","","",null,null],[13,"Invalid","","",66,null],[13,"NoLinkage","","",66,null],[13,"Internal","","",66,null],[13,"UniqueExternal","","",66,null],[13,"External","","",66,null],[4,"CXLoadDiag_Error","","",null,null],[13,"None","","",67,null],[13,"Unknown","","",67,null],[13,"CannotLoad","","",67,null],[13,"InvalidFile","","",67,null],[4,"CXRefQualifierKind","","",null,null],[13,"None","","",68,null],[13,"LValue","","",68,null],[13,"RValue","","",68,null],[4,"CXResult","","",null,null],[13,"Success","","",69,null],[13,"Invalid","","",69,null],[13,"VisitBreak","","",69,null],[4,"CXSaveError","","",null,null],[13,"None","","",70,null],[13,"Unknown","","",70,null],[13,"TranslationErrors","","",70,null],[13,"InvalidTU","","",70,null],[4,"CXTUResourceUsageKind","","",null,null],[13,"AST","","",71,null],[13,"Identifiers","","",71,null],[13,"Selectors","","",71,null],[13,"GlobalCompletionResults","","",71,null],[13,"SourceManagerContentCache","","",71,null],[13,"AST_SideTables","","",71,null],[13,"SourceManager_Membuffer_Malloc","","",71,null],[13,"SourceManager_Membuffer_MMap","","",71,null],[13,"ExternalASTSource_Membuffer_Malloc","","",71,null],[13,"ExternalASTSource_Membuffer_MMap","","",71,null],[13,"Preprocessor","","",71,null],[13,"PreprocessingRecord","","",71,null],[13,"SourceManager_DataStructures","","",71,null],[13,"Preprocessor_HeaderSearch","","",71,null],[4,"CXTemplateArgumentKind","","",null,null],[13,"Null","","",72,null],[13,"Type","","",72,null],[13,"Declaration","","",72,null],[13,"NullPtr","","",72,null],[13,"Integral","","",72,null],[13,"Template","","",72,null],[13,"TemplateExpansion","","",72,null],[13,"Expression","","",72,null],[13,"Pack","","",72,null],[13,"Invalid","","",72,null],[4,"CXTokenKind","","",null,null],[13,"Punctuation","","",73,null],[13,"Keyword","","",73,null],[13,"Identifier","","",73,null],[13,"Literal","","",73,null],[13,"Comment","","",73,null],[4,"CXTypeKind","","",null,null],[13,"Invalid","","",74,null],[13,"Unexposed","","",74,null],[13,"Void","","",74,null],[13,"Bool","","",74,null],[13,"Char_U","","",74,null],[13,"UChar","","",74,null],[13,"Char16","","",74,null],[13,"Char32","","",74,null],[13,"UShort","","",74,null],[13,"UInt","","",74,null],[13,"ULong","","",74,null],[13,"ULongLong","","",74,null],[13,"UInt128","","",74,null],[13,"Char_S","","",74,null],[13,"SChar","","",74,null],[13,"WChar","","",74,null],[13,"Short","","",74,null],[13,"Int","","",74,null],[13,"Long","","",74,null],[13,"LongLong","","",74,null],[13,"Int128","","",74,null],[13,"Float","","",74,null],[13,"Double","","",74,null],[13,"LongDouble","","",74,null],[13,"NullPtr","","",74,null],[13,"Overload","","",74,null],[13,"Dependent","","",74,null],[13,"ObjCId","","",74,null],[13,"ObjCClass","","",74,null],[13,"ObjCSel","","",74,null],[13,"Complex","","",74,null],[13,"Pointer","","",74,null],[13,"BlockPointer","","",74,null],[13,"LValueReference","","",74,null],[13,"RValueReference","","",74,null],[13,"Record","","",74,null],[13,"Enum","","",74,null],[13,"Typedef","","",74,null],[13,"ObjCInterface","","",74,null],[13,"ObjCObjectPointer","","",74,null],[13,"FunctionNoProto","","",74,null],[13,"FunctionProto","","",74,null],[13,"ConstantArray","","",74,null],[13,"Vector","","",74,null],[13,"IncompleteArray","","",74,null],[13,"VariableArray","","",74,null],[13,"DependentSizedArray","","",74,null],[13,"MemberPointer","","",74,null],[4,"CXTypeLayoutError","","",null,null],[13,"Invalid","","",75,null],[13,"Incomplete","","",75,null],[13,"Dependent","","",75,null],[13,"NotConstantSize","","",75,null],[13,"InvalidFieldName","","",75,null],[4,"CXVisitorResult","","",null,null],[13,"Break","","",76,null],[13,"Continue","","",76,null],[4,"CX_CXXAccessSpecifier","","",null,null],[13,"CXXInvalidAccessSpecifier","","",77,null],[13,"CXXPublic","","",77,null],[13,"CXXProtected","","",77,null],[13,"CXXPrivate","","",77,null],[4,"CX_StorageClass","","",null,null],[13,"Invalid","","",78,null],[13,"None","","",78,null],[13,"Extern","","",78,null],[13,"Static","","",78,null],[13,"PrivateExtern","","",78,null],[13,"OpenCLWorkGroupLocal","","",78,null],[13,"Auto","","",78,null],[13,"Register","","",78,null],[5,"clang_CXCursorSet_contains","","",null,null],[5,"clang_CXCursorSet_insert","","",null,null],[5,"clang_CXIndex_getGlobalOptions","","",null,null],[5,"clang_CXIndex_setGlobalOptions","","",null,null],[5,"clang_CXXMethod_isConst","","",null,null],[5,"clang_CXXMethod_isPureVirtual","","",null,null],[5,"clang_CXXMethod_isStatic","","",null,null],[5,"clang_CXXMethod_isVirtual","","",null,null],[5,"clang_CompilationDatabase_dispose","","",null,null],[5,"clang_CompilationDatabase_fromDirectory","","",null,null],[5,"clang_CompilationDatabase_getAllCompileCommands","","",null,null],[5,"clang_CompilationDatabase_getCompileCommands","","",null,null],[5,"clang_CompileCommand_getArg","","",null,null],[5,"clang_CompileCommand_getDirectory","","",null,null],[5,"clang_CompileCommand_getMappedSourceContent","","",null,null],[5,"clang_CompileCommand_getMappedSourcePath","","",null,null],[5,"clang_CompileCommand_getNumArgs","","",null,null],[5,"clang_CompileCommand_getNumMappedSources","","",null,null],[5,"clang_CompileCommands_dispose","","",null,null],[5,"clang_CompileCommands_getCommand","","",null,null],[5,"clang_CompileCommands_getSize","","",null,null],[5,"clang_Cursor_getArgument","","",null,null],[5,"clang_Cursor_getBriefCommentText","","",null,null],[5,"clang_Cursor_getCommentRange","","",null,null],[5,"clang_Cursor_getMangling","","",null,null],[5,"clang_Cursor_getModule","","",null,null],[5,"clang_Cursor_getNumArguments","","",null,null],[5,"clang_Cursor_getNumTemplateArguments","","",null,null],[5,"clang_Cursor_getObjCDeclQualifiers","","",null,null],[5,"clang_Cursor_getObjCPropertyAttributes","","",null,null],[5,"clang_Cursor_getObjCSelectorIndex","","",null,null],[5,"clang_Cursor_getOffsetOfField","","",null,null],[5,"clang_Cursor_getRawCommentText","","",null,null],[5,"clang_Cursor_getReceiverType","","",null,null],[5,"clang_Cursor_getSpellingNameRange","","",null,null],[5,"clang_Cursor_getStorageClass","","",null,null],[5,"clang_Cursor_getTemplateArgumentKind","","",null,null],[5,"clang_Cursor_getTemplateArgumentType","","",null,null],[5,"clang_Cursor_getTemplateArgumentUnsignedValue","","",null,null],[5,"clang_Cursor_getTemplateArgumentValue","","",null,null],[5,"clang_Cursor_getTranslationUnit","","",null,null],[5,"clang_Cursor_isAnonymous","","",null,null],[5,"clang_Cursor_isBitField","","",null,null],[5,"clang_Cursor_isDynamicCall","","",null,null],[5,"clang_Cursor_isNull","","",null,null],[5,"clang_Cursor_isObjCOptional","","",null,null],[5,"clang_Cursor_isVariadic","","",null,null],[5,"clang_File_isEqual","","",null,null],[5,"clang_IndexAction_create","","",null,null],[5,"clang_IndexAction_dispose","","",null,null],[5,"clang_Location_isFromMainFile","","",null,null],[5,"clang_Location_isInSystemHeader","","",null,null],[5,"clang_Module_getASTFile","","",null,null],[5,"clang_Module_getFullName","","",null,null],[5,"clang_Module_getName","","",null,null],[5,"clang_Module_getNumTopLevelHeaders","","",null,null],[5,"clang_Module_getParent","","",null,null],[5,"clang_Module_getTopLevelHeader","","",null,null],[5,"clang_Module_isSystem","","",null,null],[5,"clang_Range_isNull","","",null,null],[5,"clang_Type_getAlignOf","","",null,null],[5,"clang_Type_getCXXRefQualifier","","",null,null],[5,"clang_Type_getClassType","","",null,null],[5,"clang_Type_getNumTemplateArguments","","",null,null],[5,"clang_Type_getOffsetOf","","",null,null],[5,"clang_Type_getSizeOf","","",null,null],[5,"clang_Type_getTemplateArgumentAsType","","",null,null],[5,"clang_Type_visitFields","","",null,null],[5,"clang_annotateTokens","","",null,null],[5,"clang_codeCompleteAt","","",null,null],[5,"clang_codeCompleteGetContainerKind","","",null,null],[5,"clang_codeCompleteGetContainerUSR","","",null,null],[5,"clang_codeCompleteGetContexts","","",null,null],[5,"clang_codeCompleteGetDiagnostic","","",null,null],[5,"clang_codeCompleteGetNumDiagnostics","","",null,null],[5,"clang_codeCompleteGetObjCSelector","","",null,null],[5,"clang_constructUSR_ObjCCategory","","",null,null],[5,"clang_constructUSR_ObjCClass","","",null,null],[5,"clang_constructUSR_ObjCIvar","","",null,null],[5,"clang_constructUSR_ObjCMethod","","",null,null],[5,"clang_constructUSR_ObjCProperty","","",null,null],[5,"clang_constructUSR_ObjCProtocol","","",null,null],[5,"clang_createCXCursorSet","","",null,null],[5,"clang_createIndex","","",null,null],[5,"clang_createTranslationUnit","","",null,null],[5,"clang_createTranslationUnit2","","",null,null],[5,"clang_createTranslationUnitFromSourceFile","","",null,null],[5,"clang_defaultCodeCompleteOptions","","",null,null],[5,"clang_defaultDiagnosticDisplayOptions","","",null,null],[5,"clang_defaultEditingTranslationUnitOptions","","",null,null],[5,"clang_defaultReparseOptions","","",null,null],[5,"clang_defaultSaveOptions","","",null,null],[5,"clang_disposeCXCursorSet","","",null,null],[5,"clang_disposeCXPlatformAvailability","","",null,null],[5,"clang_disposeCXTUResourceUsage","","",null,null],[5,"clang_disposeCodeCompleteResults","","",null,null],[5,"clang_disposeDiagnostic","","",null,null],[5,"clang_disposeDiagnosticSet","","",null,null],[5,"clang_disposeIndex","","",null,null],[5,"clang_disposeOverriddenCursors","","",null,null],[5,"clang_disposeSourceRangeList","","",null,null],[5,"clang_disposeString","","",null,null],[5,"clang_disposeTokens","","",null,null],[5,"clang_disposeTranslationUnit","","",null,null],[5,"clang_enableStackTraces","","",null,null],[5,"clang_equalCursors","","",null,null],[5,"clang_equalLocations","","",null,null],[5,"clang_equalRanges","","",null,null],[5,"clang_equalTypes","","",null,null],[5,"clang_executeOnThread","","",null,null],[5,"clang_findIncludesInFile","","",null,null],[5,"clang_findReferencesInFile","","",null,null],[5,"clang_formatDiagnostic","","",null,null],[5,"clang_free","","",null,null],[5,"clang_getArgType","","",null,null],[5,"clang_getArrayElementType","","",null,null],[5,"clang_getArraySize","","",null,null],[5,"clang_getCString","","",null,null],[5,"clang_getCXTUResourceUsage","","",null,null],[5,"clang_getCXXAccessSpecifier","","",null,null],[5,"clang_getCanonicalCursor","","",null,null],[5,"clang_getCanonicalType","","",null,null],[5,"clang_getChildDiagnostics","","",null,null],[5,"clang_getClangVersion","","",null,null],[5,"clang_getCompletionAnnotation","","",null,null],[5,"clang_getCompletionAvailability","","",null,null],[5,"clang_getCompletionBriefComment","","",null,null],[5,"clang_getCompletionChunkCompletionString","","",null,null],[5,"clang_getCompletionChunkKind","","",null,null],[5,"clang_getCompletionChunkText","","",null,null],[5,"clang_getCompletionNumAnnotations","","",null,null],[5,"clang_getCompletionParent","","",null,null],[5,"clang_getCompletionPriority","","",null,null],[5,"clang_getCursor","","",null,null],[5,"clang_getCursorAvailability","","",null,null],[5,"clang_getCursorCompletionString","","",null,null],[5,"clang_getCursorDefinition","","",null,null],[5,"clang_getCursorDisplayName","","",null,null],[5,"clang_getCursorExtent","","",null,null],[5,"clang_getCursorKind","","",null,null],[5,"clang_getCursorKindSpelling","","",null,null],[5,"clang_getCursorLanguage","","",null,null],[5,"clang_getCursorLexicalParent","","",null,null],[5,"clang_getCursorLinkage","","",null,null],[5,"clang_getCursorLocation","","",null,null],[5,"clang_getCursorPlatformAvailability","","",null,null],[5,"clang_getCursorReferenceNameRange","","",null,null],[5,"clang_getCursorReferenced","","",null,null],[5,"clang_getCursorResultType","","",null,null],[5,"clang_getCursorSemanticParent","","",null,null],[5,"clang_getCursorSpelling","","",null,null],[5,"clang_getCursorType","","",null,null],[5,"clang_getCursorUSR","","",null,null],[5,"clang_getDeclObjCTypeEncoding","","",null,null],[5,"clang_getDefinitionSpellingAndExtent","","",null,null],[5,"clang_getDiagnostic","","",null,null],[5,"clang_getDiagnosticCategory","","",null,null],[5,"clang_getDiagnosticCategoryName","","",null,null],[5,"clang_getDiagnosticCategoryText","","",null,null],[5,"clang_getDiagnosticFixIt","","",null,null],[5,"clang_getDiagnosticInSet","","",null,null],[5,"clang_getDiagnosticLocation","","",null,null],[5,"clang_getDiagnosticNumFixIts","","",null,null],[5,"clang_getDiagnosticNumRanges","","",null,null],[5,"clang_getDiagnosticOption","","",null,null],[5,"clang_getDiagnosticRange","","",null,null],[5,"clang_getDiagnosticSetFromTU","","",null,null],[5,"clang_getDiagnosticSeverity","","",null,null],[5,"clang_getDiagnosticSpelling","","",null,null],[5,"clang_getElementType","","",null,null],[5,"clang_getEnumConstantDeclUnsignedValue","","",null,null],[5,"clang_getEnumConstantDeclValue","","",null,null],[5,"clang_getEnumDeclIntegerType","","",null,null],[5,"clang_getExpansionLocation","","",null,null],[5,"clang_getFieldDeclBitWidth","","",null,null],[5,"clang_getFile","","",null,null],[5,"clang_getFileLocation","","",null,null],[5,"clang_getFileName","","",null,null],[5,"clang_getFileTime","","",null,null],[5,"clang_getFileUniqueID","","",null,null],[5,"clang_getFunctionTypeCallingConv","","",null,null],[5,"clang_getIBOutletCollectionType","","",null,null],[5,"clang_getIncludedFile","","",null,null],[5,"clang_getInclusions","","",null,null],[5,"clang_getInstantiationLocation","","",null,null],[5,"clang_getLocation","","",null,null],[5,"clang_getLocationForOffset","","",null,null],[5,"clang_getModuleForFile","","",null,null],[5,"clang_getNullCursor","","",null,null],[5,"clang_getNullLocation","","",null,null],[5,"clang_getNullRange","","",null,null],[5,"clang_getNumArgTypes","","",null,null],[5,"clang_getNumCompletionChunks","","",null,null],[5,"clang_getNumDiagnostics","","",null,null],[5,"clang_getNumDiagnosticsInSet","","",null,null],[5,"clang_getNumElements","","",null,null],[5,"clang_getNumOverloadedDecls","","",null,null],[5,"clang_getOverloadedDecl","","",null,null],[5,"clang_getOverriddenCursors","","",null,null],[5,"clang_getPointeeType","","",null,null],[5,"clang_getPresumedLocation","","",null,null],[5,"clang_getRange","","",null,null],[5,"clang_getRangeEnd","","",null,null],[5,"clang_getRangeStart","","",null,null],[5,"clang_getRemappings","","",null,null],[5,"clang_getRemappingsFromFileList","","",null,null],[5,"clang_getResultType","","",null,null],[5,"clang_getSkippedRanges","","",null,null],[5,"clang_getSpecializedCursorTemplate","","",null,null],[5,"clang_getSpellingLocation","","",null,null],[5,"clang_getTUResourceUsageName","","",null,null],[5,"clang_getTemplateCursorKind","","",null,null],[5,"clang_getTokenExtent","","",null,null],[5,"clang_getTokenKind","","",null,null],[5,"clang_getTokenLocation","","",null,null],[5,"clang_getTokenSpelling","","",null,null],[5,"clang_getTranslationUnitCursor","","",null,null],[5,"clang_getTranslationUnitSpelling","","",null,null],[5,"clang_getTypeDeclaration","","",null,null],[5,"clang_getTypeKindSpelling","","",null,null],[5,"clang_getTypeSpelling","","",null,null],[5,"clang_getTypedefDeclUnderlyingType","","",null,null],[5,"clang_hashCursor","","",null,null],[5,"clang_indexLoc_getCXSourceLocation","","",null,null],[5,"clang_indexLoc_getFileLocation","","",null,null],[5,"clang_indexSourceFile","","",null,null],[5,"clang_indexTranslationUnit","","",null,null],[5,"clang_index_getCXXClassDeclInfo","","",null,null],[5,"clang_index_getClientContainer","","",null,null],[5,"clang_index_getClientEntity","","",null,null],[5,"clang_index_getIBOutletCollectionAttrInfo","","",null,null],[5,"clang_index_getObjCCategoryDeclInfo","","",null,null],[5,"clang_index_getObjCContainerDeclInfo","","",null,null],[5,"clang_index_getObjCInterfaceDeclInfo","","",null,null],[5,"clang_index_getObjCPropertyDeclInfo","","",null,null],[5,"clang_index_getObjCProtocolRefListInfo","","",null,null],[5,"clang_index_isEntityObjCContainerKind","","",null,null],[5,"clang_index_setClientContainer","","",null,null],[5,"clang_index_setClientEntity","","",null,null],[5,"clang_isAttribute","","",null,null],[5,"clang_isConstQualifiedType","","",null,null],[5,"clang_isCursorDefinition","","",null,null],[5,"clang_isDeclaration","","",null,null],[5,"clang_isExpression","","",null,null],[5,"clang_isFileMultipleIncludeGuarded","","",null,null],[5,"clang_isFunctionTypeVariadic","","",null,null],[5,"clang_isInvalid","","",null,null],[5,"clang_isPODType","","",null,null],[5,"clang_isPreprocessing","","",null,null],[5,"clang_isReference","","",null,null],[5,"clang_isRestrictQualifiedType","","",null,null],[5,"clang_isStatement","","",null,null],[5,"clang_isTranslationUnit","","",null,null],[5,"clang_isUnexposed","","",null,null],[5,"clang_isVirtualBase","","",null,null],[5,"clang_isVolatileQualifiedType","","",null,null],[5,"clang_loadDiagnostics","","",null,null],[5,"clang_parseTranslationUnit","","",null,null],[5,"clang_parseTranslationUnit2","","",null,null],[5,"clang_remap_dispose","","",null,null],[5,"clang_remap_getFilenames","","",null,null],[5,"clang_remap_getNumFiles","","",null,null],[5,"clang_reparseTranslationUnit","","",null,null],[5,"clang_saveTranslationUnit","","",null,null],[5,"clang_sortCodeCompletionResults","","",null,null],[5,"clang_toggleCrashRecovery","","",null,null],[5,"clang_tokenize","","",null,null],[5,"clang_visitChildren","","",null,null],[6,"CXClientData","","",null,null],[6,"CXCursorVisitor","","",null,null],[6,"CXFieldVisitor","","",null,null],[6,"CXInclusionVisitor","","",null,null],[17,"CXCodeComplete_IncludeMacros","","",null,null],[17,"CXCodeComplete_IncludeCodePatterns","","",null,null],[17,"CXCodeComplete_IncludeBriefComments","","",null,null],[17,"CXCompletionContext_Unexposed","","",null,null],[17,"CXCompletionContext_AnyType","","",null,null],[17,"CXCompletionContext_AnyValue","","",null,null],[17,"CXCompletionContext_ObjCObjectValue","","",null,null],[17,"CXCompletionContext_ObjCSelectorValue","","",null,null],[17,"CXCompletionContext_CXXClassTypeValue","","",null,null],[17,"CXCompletionContext_DotMemberAccess","","",null,null],[17,"CXCompletionContext_ArrowMemberAccess","","",null,null],[17,"CXCompletionContext_ObjCPropertyAccess","","",null,null],[17,"CXCompletionContext_EnumTag","","",null,null],[17,"CXCompletionContext_UnionTag","","",null,null],[17,"CXCompletionContext_StructTag","","",null,null],[17,"CXCompletionContext_ClassTag","","",null,null],[17,"CXCompletionContext_Namespace","","",null,null],[17,"CXCompletionContext_NestedNameSpecifier","","",null,null],[17,"CXCompletionContext_ObjCInterface","","",null,null],[17,"CXCompletionContext_ObjCProtocol","","",null,null],[17,"CXCompletionContext_ObjCCategory","","",null,null],[17,"CXCompletionContext_ObjCInstanceMessage","","",null,null],[17,"CXCompletionContext_ObjCClassMessage","","",null,null],[17,"CXCompletionContext_ObjCSelectorName","","",null,null],[17,"CXCompletionContext_MacroName","","",null,null],[17,"CXCompletionContext_NaturalLanguage","","",null,null],[17,"CXCompletionContext_Unknown","","",null,null],[17,"CXDiagnostic_DisplaySourceLocation","","",null,null],[17,"CXDiagnostic_DisplayColumn","","",null,null],[17,"CXDiagnostic_DisplaySourceRanges","","",null,null],[17,"CXDiagnostic_DisplayOption","","",null,null],[17,"CXDiagnostic_DisplayCategoryId","","",null,null],[17,"CXDiagnostic_DisplayCategoryName","","",null,null],[17,"CXGlobalOpt_None","","",null,null],[17,"CXGlobalOpt_ThreadBackgroundPriorityForIndexing","","",null,null],[17,"CXGlobalOpt_ThreadBackgroundPriorityForEditing","","",null,null],[17,"CXGlobalOpt_ThreadBackgroundPriorityForAll","","",null,null],[17,"CXIdxDeclFlag_Skipped","","",null,null],[17,"CXIndexOptNone","","",null,null],[17,"CXIndexOptSuppressRedundantRefs","","",null,null],[17,"CXIndexOptIndexFunctionLocalSymbols","","",null,null],[17,"CXIndexOptIndexImplicitTemplateInstantiations","","",null,null],[17,"CXIndexOptSuppressWarnings","","",null,null],[17,"CXIndexOptSkipParsedBodiesInSession","","",null,null],[17,"CXNameRange_WantQualifier","","",null,null],[17,"CXNameRange_WantTemplateArgs","","",null,null],[17,"CXNameRange_WantSinglePiece","","",null,null],[17,"CXObjCDeclQualifier_None","","",null,null],[17,"CXObjCDeclQualifier_In","","",null,null],[17,"CXObjCDeclQualifier_Inout","","",null,null],[17,"CXObjCDeclQualifier_Out","","",null,null],[17,"CXObjCDeclQualifier_Bycopy","","",null,null],[17,"CXObjCDeclQualifier_Byref","","",null,null],[17,"CXObjCDeclQualifier_Oneway","","",null,null],[17,"CXObjCPropertyAttr_noattr","","",null,null],[17,"CXObjCPropertyAttr_readonly","","",null,null],[17,"CXObjCPropertyAttr_getter","","",null,null],[17,"CXObjCPropertyAttr_assign","","",null,null],[17,"CXObjCPropertyAttr_readwrite","","",null,null],[17,"CXObjCPropertyAttr_retain","","",null,null],[17,"CXObjCPropertyAttr_copy","","",null,null],[17,"CXObjCPropertyAttr_nonatomic","","",null,null],[17,"CXObjCPropertyAttr_setter","","",null,null],[17,"CXObjCPropertyAttr_atomic","","",null,null],[17,"CXObjCPropertyAttr_weak","","",null,null],[17,"CXObjCPropertyAttr_strong","","",null,null],[17,"CXObjCPropertyAttr_unsafe_unretained","","",null,null],[17,"CXReparse_None","","",null,null],[17,"CXSaveTranslationUnit_None","","",null,null],[17,"CXTranslationUnit_None","","",null,null],[17,"CXTranslationUnit_DetailedPreprocessingRecord","","",null,null],[17,"CXTranslationUnit_Incomplete","","",null,null],[17,"CXTranslationUnit_PrecompiledPreamble","","",null,null],[17,"CXTranslationUnit_CacheCompletionResults","","",null,null],[17,"CXTranslationUnit_ForSerialization","","",null,null],[17,"CXTranslationUnit_CXXChainedPCH","","",null,null],[17,"CXTranslationUnit_SkipFunctionBodies","","",null,null],[17,"CXTranslationUnit_IncludeBriefCommentsInCodeCompletion","","",null,null],[11,"hash","","",51,null],[11,"cmp","","",51,{"inputs":[{"name":"cxavailabilitykind"},{"name":"cxavailabilitykind"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",51,{"inputs":[{"name":"cxavailabilitykind"},{"name":"cxavailabilitykind"}],"output":{"name":"option"}}],[11,"eq","","",51,{"inputs":[{"name":"cxavailabilitykind"},{"name":"cxavailabilitykind"}],"output":{"name":"bool"}}],[11,"fmt","","",51,{"inputs":[{"name":"cxavailabilitykind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",51,{"inputs":[{"name":"cxavailabilitykind"}],"output":{"name":"cxavailabilitykind"}}],[11,"hash","","",52,null],[11,"cmp","","",52,{"inputs":[{"name":"cxcallingconv"},{"name":"cxcallingconv"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",52,{"inputs":[{"name":"cxcallingconv"},{"name":"cxcallingconv"}],"output":{"name":"option"}}],[11,"eq","","",52,{"inputs":[{"name":"cxcallingconv"},{"name":"cxcallingconv"}],"output":{"name":"bool"}}],[11,"fmt","","",52,{"inputs":[{"name":"cxcallingconv"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",52,{"inputs":[{"name":"cxcallingconv"}],"output":{"name":"cxcallingconv"}}],[11,"hash","","",53,null],[11,"cmp","","",53,{"inputs":[{"name":"cxchildvisitresult"},{"name":"cxchildvisitresult"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",53,{"inputs":[{"name":"cxchildvisitresult"},{"name":"cxchildvisitresult"}],"output":{"name":"option"}}],[11,"eq","","",53,{"inputs":[{"name":"cxchildvisitresult"},{"name":"cxchildvisitresult"}],"output":{"name":"bool"}}],[11,"fmt","","",53,{"inputs":[{"name":"cxchildvisitresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",53,{"inputs":[{"name":"cxchildvisitresult"}],"output":{"name":"cxchildvisitresult"}}],[11,"hash","","",54,null],[11,"cmp","","",54,{"inputs":[{"name":"cxcompilationdatabase_error"},{"name":"cxcompilationdatabase_error"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",54,{"inputs":[{"name":"cxcompilationdatabase_error"},{"name":"cxcompilationdatabase_error"}],"output":{"name":"option"}}],[11,"eq","","",54,{"inputs":[{"name":"cxcompilationdatabase_error"},{"name":"cxcompilationdatabase_error"}],"output":{"name":"bool"}}],[11,"fmt","","",54,{"inputs":[{"name":"cxcompilationdatabase_error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",54,{"inputs":[{"name":"cxcompilationdatabase_error"}],"output":{"name":"cxcompilationdatabase_error"}}],[11,"hash","","",55,null],[11,"cmp","","",55,{"inputs":[{"name":"cxcompletionchunkkind"},{"name":"cxcompletionchunkkind"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",55,{"inputs":[{"name":"cxcompletionchunkkind"},{"name":"cxcompletionchunkkind"}],"output":{"name":"option"}}],[11,"eq","","",55,{"inputs":[{"name":"cxcompletionchunkkind"},{"name":"cxcompletionchunkkind"}],"output":{"name":"bool"}}],[11,"fmt","","",55,{"inputs":[{"name":"cxcompletionchunkkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",55,{"inputs":[{"name":"cxcompletionchunkkind"}],"output":{"name":"cxcompletionchunkkind"}}],[11,"hash","","",56,null],[11,"cmp","","",56,{"inputs":[{"name":"cxcursorkind"},{"name":"cxcursorkind"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",56,{"inputs":[{"name":"cxcursorkind"},{"name":"cxcursorkind"}],"output":{"name":"option"}}],[11,"eq","","",56,{"inputs":[{"name":"cxcursorkind"},{"name":"cxcursorkind"}],"output":{"name":"bool"}}],[11,"fmt","","",56,{"inputs":[{"name":"cxcursorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",56,{"inputs":[{"name":"cxcursorkind"}],"output":{"name":"cxcursorkind"}}],[11,"hash","","",57,null],[11,"cmp","","",57,{"inputs":[{"name":"cxdiagnosticseverity"},{"name":"cxdiagnosticseverity"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",57,{"inputs":[{"name":"cxdiagnosticseverity"},{"name":"cxdiagnosticseverity"}],"output":{"name":"option"}}],[11,"eq","","",57,{"inputs":[{"name":"cxdiagnosticseverity"},{"name":"cxdiagnosticseverity"}],"output":{"name":"bool"}}],[11,"fmt","","",57,{"inputs":[{"name":"cxdiagnosticseverity"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",57,{"inputs":[{"name":"cxdiagnosticseverity"}],"output":{"name":"cxdiagnosticseverity"}}],[11,"hash","","",58,null],[11,"cmp","","",58,{"inputs":[{"name":"cxerrorcode"},{"name":"cxerrorcode"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",58,{"inputs":[{"name":"cxerrorcode"},{"name":"cxerrorcode"}],"output":{"name":"option"}}],[11,"eq","","",58,{"inputs":[{"name":"cxerrorcode"},{"name":"cxerrorcode"}],"output":{"name":"bool"}}],[11,"fmt","","",58,{"inputs":[{"name":"cxerrorcode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",58,{"inputs":[{"name":"cxerrorcode"}],"output":{"name":"cxerrorcode"}}],[11,"hash","","",59,null],[11,"cmp","","",59,{"inputs":[{"name":"cxidxattrkind"},{"name":"cxidxattrkind"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",59,{"inputs":[{"name":"cxidxattrkind"},{"name":"cxidxattrkind"}],"output":{"name":"option"}}],[11,"eq","","",59,{"inputs":[{"name":"cxidxattrkind"},{"name":"cxidxattrkind"}],"output":{"name":"bool"}}],[11,"fmt","","",59,{"inputs":[{"name":"cxidxattrkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",59,{"inputs":[{"name":"cxidxattrkind"}],"output":{"name":"cxidxattrkind"}}],[11,"hash","","",60,null],[11,"cmp","","",60,{"inputs":[{"name":"cxidxentitycxxtemplatekind"},{"name":"cxidxentitycxxtemplatekind"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",60,{"inputs":[{"name":"cxidxentitycxxtemplatekind"},{"name":"cxidxentitycxxtemplatekind"}],"output":{"name":"option"}}],[11,"eq","","",60,{"inputs":[{"name":"cxidxentitycxxtemplatekind"},{"name":"cxidxentitycxxtemplatekind"}],"output":{"name":"bool"}}],[11,"fmt","","",60,{"inputs":[{"name":"cxidxentitycxxtemplatekind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",60,{"inputs":[{"name":"cxidxentitycxxtemplatekind"}],"output":{"name":"cxidxentitycxxtemplatekind"}}],[11,"hash","","",61,null],[11,"cmp","","",61,{"inputs":[{"name":"cxidxentitykind"},{"name":"cxidxentitykind"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",61,{"inputs":[{"name":"cxidxentitykind"},{"name":"cxidxentitykind"}],"output":{"name":"option"}}],[11,"eq","","",61,{"inputs":[{"name":"cxidxentitykind"},{"name":"cxidxentitykind"}],"output":{"name":"bool"}}],[11,"fmt","","",61,{"inputs":[{"name":"cxidxentitykind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",61,{"inputs":[{"name":"cxidxentitykind"}],"output":{"name":"cxidxentitykind"}}],[11,"hash","","",62,null],[11,"cmp","","",62,{"inputs":[{"name":"cxidxentitylanguage"},{"name":"cxidxentitylanguage"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",62,{"inputs":[{"name":"cxidxentitylanguage"},{"name":"cxidxentitylanguage"}],"output":{"name":"option"}}],[11,"eq","","",62,{"inputs":[{"name":"cxidxentitylanguage"},{"name":"cxidxentitylanguage"}],"output":{"name":"bool"}}],[11,"fmt","","",62,{"inputs":[{"name":"cxidxentitylanguage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",62,{"inputs":[{"name":"cxidxentitylanguage"}],"output":{"name":"cxidxentitylanguage"}}],[11,"hash","","",63,null],[11,"cmp","","",63,{"inputs":[{"name":"cxidxentityrefkind"},{"name":"cxidxentityrefkind"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",63,{"inputs":[{"name":"cxidxentityrefkind"},{"name":"cxidxentityrefkind"}],"output":{"name":"option"}}],[11,"eq","","",63,{"inputs":[{"name":"cxidxentityrefkind"},{"name":"cxidxentityrefkind"}],"output":{"name":"bool"}}],[11,"fmt","","",63,{"inputs":[{"name":"cxidxentityrefkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",63,{"inputs":[{"name":"cxidxentityrefkind"}],"output":{"name":"cxidxentityrefkind"}}],[11,"hash","","",64,null],[11,"cmp","","",64,{"inputs":[{"name":"cxidxobjccontainerkind"},{"name":"cxidxobjccontainerkind"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",64,{"inputs":[{"name":"cxidxobjccontainerkind"},{"name":"cxidxobjccontainerkind"}],"output":{"name":"option"}}],[11,"eq","","",64,{"inputs":[{"name":"cxidxobjccontainerkind"},{"name":"cxidxobjccontainerkind"}],"output":{"name":"bool"}}],[11,"fmt","","",64,{"inputs":[{"name":"cxidxobjccontainerkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",64,{"inputs":[{"name":"cxidxobjccontainerkind"}],"output":{"name":"cxidxobjccontainerkind"}}],[11,"hash","","",65,null],[11,"cmp","","",65,{"inputs":[{"name":"cxlanguagekind"},{"name":"cxlanguagekind"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",65,{"inputs":[{"name":"cxlanguagekind"},{"name":"cxlanguagekind"}],"output":{"name":"option"}}],[11,"eq","","",65,{"inputs":[{"name":"cxlanguagekind"},{"name":"cxlanguagekind"}],"output":{"name":"bool"}}],[11,"fmt","","",65,{"inputs":[{"name":"cxlanguagekind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",65,{"inputs":[{"name":"cxlanguagekind"}],"output":{"name":"cxlanguagekind"}}],[11,"hash","","",66,null],[11,"cmp","","",66,{"inputs":[{"name":"cxlinkagekind"},{"name":"cxlinkagekind"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",66,{"inputs":[{"name":"cxlinkagekind"},{"name":"cxlinkagekind"}],"output":{"name":"option"}}],[11,"eq","","",66,{"inputs":[{"name":"cxlinkagekind"},{"name":"cxlinkagekind"}],"output":{"name":"bool"}}],[11,"fmt","","",66,{"inputs":[{"name":"cxlinkagekind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",66,{"inputs":[{"name":"cxlinkagekind"}],"output":{"name":"cxlinkagekind"}}],[11,"hash","","",67,null],[11,"cmp","","",67,{"inputs":[{"name":"cxloaddiag_error"},{"name":"cxloaddiag_error"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",67,{"inputs":[{"name":"cxloaddiag_error"},{"name":"cxloaddiag_error"}],"output":{"name":"option"}}],[11,"eq","","",67,{"inputs":[{"name":"cxloaddiag_error"},{"name":"cxloaddiag_error"}],"output":{"name":"bool"}}],[11,"fmt","","",67,{"inputs":[{"name":"cxloaddiag_error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",67,{"inputs":[{"name":"cxloaddiag_error"}],"output":{"name":"cxloaddiag_error"}}],[11,"hash","","",68,null],[11,"cmp","","",68,{"inputs":[{"name":"cxrefqualifierkind"},{"name":"cxrefqualifierkind"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",68,{"inputs":[{"name":"cxrefqualifierkind"},{"name":"cxrefqualifierkind"}],"output":{"name":"option"}}],[11,"eq","","",68,{"inputs":[{"name":"cxrefqualifierkind"},{"name":"cxrefqualifierkind"}],"output":{"name":"bool"}}],[11,"fmt","","",68,{"inputs":[{"name":"cxrefqualifierkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",68,{"inputs":[{"name":"cxrefqualifierkind"}],"output":{"name":"cxrefqualifierkind"}}],[11,"hash","","",69,null],[11,"cmp","","",69,{"inputs":[{"name":"cxresult"},{"name":"cxresult"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",69,{"inputs":[{"name":"cxresult"},{"name":"cxresult"}],"output":{"name":"option"}}],[11,"eq","","",69,{"inputs":[{"name":"cxresult"},{"name":"cxresult"}],"output":{"name":"bool"}}],[11,"fmt","","",69,{"inputs":[{"name":"cxresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",69,{"inputs":[{"name":"cxresult"}],"output":{"name":"cxresult"}}],[11,"hash","","",70,null],[11,"cmp","","",70,{"inputs":[{"name":"cxsaveerror"},{"name":"cxsaveerror"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",70,{"inputs":[{"name":"cxsaveerror"},{"name":"cxsaveerror"}],"output":{"name":"option"}}],[11,"eq","","",70,{"inputs":[{"name":"cxsaveerror"},{"name":"cxsaveerror"}],"output":{"name":"bool"}}],[11,"fmt","","",70,{"inputs":[{"name":"cxsaveerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",70,{"inputs":[{"name":"cxsaveerror"}],"output":{"name":"cxsaveerror"}}],[11,"hash","","",71,null],[11,"cmp","","",71,{"inputs":[{"name":"cxturesourceusagekind"},{"name":"cxturesourceusagekind"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",71,{"inputs":[{"name":"cxturesourceusagekind"},{"name":"cxturesourceusagekind"}],"output":{"name":"option"}}],[11,"eq","","",71,{"inputs":[{"name":"cxturesourceusagekind"},{"name":"cxturesourceusagekind"}],"output":{"name":"bool"}}],[11,"fmt","","",71,{"inputs":[{"name":"cxturesourceusagekind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",71,{"inputs":[{"name":"cxturesourceusagekind"}],"output":{"name":"cxturesourceusagekind"}}],[11,"hash","","",72,null],[11,"cmp","","",72,{"inputs":[{"name":"cxtemplateargumentkind"},{"name":"cxtemplateargumentkind"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",72,{"inputs":[{"name":"cxtemplateargumentkind"},{"name":"cxtemplateargumentkind"}],"output":{"name":"option"}}],[11,"eq","","",72,{"inputs":[{"name":"cxtemplateargumentkind"},{"name":"cxtemplateargumentkind"}],"output":{"name":"bool"}}],[11,"fmt","","",72,{"inputs":[{"name":"cxtemplateargumentkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",72,{"inputs":[{"name":"cxtemplateargumentkind"}],"output":{"name":"cxtemplateargumentkind"}}],[11,"hash","","",73,null],[11,"cmp","","",73,{"inputs":[{"name":"cxtokenkind"},{"name":"cxtokenkind"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",73,{"inputs":[{"name":"cxtokenkind"},{"name":"cxtokenkind"}],"output":{"name":"option"}}],[11,"eq","","",73,{"inputs":[{"name":"cxtokenkind"},{"name":"cxtokenkind"}],"output":{"name":"bool"}}],[11,"fmt","","",73,{"inputs":[{"name":"cxtokenkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",73,{"inputs":[{"name":"cxtokenkind"}],"output":{"name":"cxtokenkind"}}],[11,"hash","","",74,null],[11,"cmp","","",74,{"inputs":[{"name":"cxtypekind"},{"name":"cxtypekind"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",74,{"inputs":[{"name":"cxtypekind"},{"name":"cxtypekind"}],"output":{"name":"option"}}],[11,"eq","","",74,{"inputs":[{"name":"cxtypekind"},{"name":"cxtypekind"}],"output":{"name":"bool"}}],[11,"fmt","","",74,{"inputs":[{"name":"cxtypekind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",74,{"inputs":[{"name":"cxtypekind"}],"output":{"name":"cxtypekind"}}],[11,"hash","","",75,null],[11,"cmp","","",75,{"inputs":[{"name":"cxtypelayouterror"},{"name":"cxtypelayouterror"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",75,{"inputs":[{"name":"cxtypelayouterror"},{"name":"cxtypelayouterror"}],"output":{"name":"option"}}],[11,"eq","","",75,{"inputs":[{"name":"cxtypelayouterror"},{"name":"cxtypelayouterror"}],"output":{"name":"bool"}}],[11,"fmt","","",75,{"inputs":[{"name":"cxtypelayouterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",75,{"inputs":[{"name":"cxtypelayouterror"}],"output":{"name":"cxtypelayouterror"}}],[11,"hash","","",76,null],[11,"cmp","","",76,{"inputs":[{"name":"cxvisitorresult"},{"name":"cxvisitorresult"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",76,{"inputs":[{"name":"cxvisitorresult"},{"name":"cxvisitorresult"}],"output":{"name":"option"}}],[11,"eq","","",76,{"inputs":[{"name":"cxvisitorresult"},{"name":"cxvisitorresult"}],"output":{"name":"bool"}}],[11,"fmt","","",76,{"inputs":[{"name":"cxvisitorresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",76,{"inputs":[{"name":"cxvisitorresult"}],"output":{"name":"cxvisitorresult"}}],[11,"hash","","",77,null],[11,"cmp","","",77,{"inputs":[{"name":"cx_cxxaccessspecifier"},{"name":"cx_cxxaccessspecifier"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",77,{"inputs":[{"name":"cx_cxxaccessspecifier"},{"name":"cx_cxxaccessspecifier"}],"output":{"name":"option"}}],[11,"eq","","",77,{"inputs":[{"name":"cx_cxxaccessspecifier"},{"name":"cx_cxxaccessspecifier"}],"output":{"name":"bool"}}],[11,"fmt","","",77,{"inputs":[{"name":"cx_cxxaccessspecifier"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",77,{"inputs":[{"name":"cx_cxxaccessspecifier"}],"output":{"name":"cx_cxxaccessspecifier"}}],[11,"hash","","",78,null],[11,"cmp","","",78,{"inputs":[{"name":"cx_storageclass"},{"name":"cx_storageclass"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",78,{"inputs":[{"name":"cx_storageclass"},{"name":"cx_storageclass"}],"output":{"name":"option"}}],[11,"eq","","",78,{"inputs":[{"name":"cx_storageclass"},{"name":"cx_storageclass"}],"output":{"name":"bool"}}],[11,"fmt","","",78,{"inputs":[{"name":"cx_storageclass"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",78,{"inputs":[{"name":"cx_storageclass"}],"output":{"name":"cx_storageclass"}}],[11,"hash","","",79,null],[11,"cmp","","",79,{"inputs":[{"name":"cxcodecomplete_flags"},{"name":"cxcodecomplete_flags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",79,{"inputs":[{"name":"cxcodecomplete_flags"},{"name":"cxcodecomplete_flags"}],"output":{"name":"option"}}],[11,"lt","","",79,{"inputs":[{"name":"cxcodecomplete_flags"},{"name":"cxcodecomplete_flags"}],"output":{"name":"bool"}}],[11,"le","","",79,{"inputs":[{"name":"cxcodecomplete_flags"},{"name":"cxcodecomplete_flags"}],"output":{"name":"bool"}}],[11,"gt","","",79,{"inputs":[{"name":"cxcodecomplete_flags"},{"name":"cxcodecomplete_flags"}],"output":{"name":"bool"}}],[11,"ge","","",79,{"inputs":[{"name":"cxcodecomplete_flags"},{"name":"cxcodecomplete_flags"}],"output":{"name":"bool"}}],[11,"clone","","",79,{"inputs":[{"name":"cxcodecomplete_flags"}],"output":{"name":"cxcodecomplete_flags"}}],[11,"eq","","",79,{"inputs":[{"name":"cxcodecomplete_flags"},{"name":"cxcodecomplete_flags"}],"output":{"name":"bool"}}],[11,"ne","","",79,{"inputs":[{"name":"cxcodecomplete_flags"},{"name":"cxcodecomplete_flags"}],"output":{"name":"bool"}}],[11,"fmt","","",79,{"inputs":[{"name":"cxcodecomplete_flags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",79,{"inputs":[],"output":{"name":"cxcodecomplete_flags"}}],[11,"all","","Returns the set containing all flags.",79,{"inputs":[],"output":{"name":"cxcodecomplete_flags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",79,{"inputs":[{"name":"cxcodecomplete_flags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",79,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",79,{"inputs":[{"name":"c_uint"}],"output":{"name":"cxcodecomplete_flags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",79,{"inputs":[{"name":"cxcodecomplete_flags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",79,{"inputs":[{"name":"cxcodecomplete_flags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",79,{"inputs":[{"name":"cxcodecomplete_flags"},{"name":"cxcodecomplete_flags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",79,{"inputs":[{"name":"cxcodecomplete_flags"},{"name":"cxcodecomplete_flags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",79,{"inputs":[{"name":"cxcodecomplete_flags"},{"name":"cxcodecomplete_flags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",79,{"inputs":[{"name":"cxcodecomplete_flags"},{"name":"cxcodecomplete_flags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",79,{"inputs":[{"name":"cxcodecomplete_flags"},{"name":"cxcodecomplete_flags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",79,{"inputs":[{"name":"cxcodecomplete_flags"},{"name":"cxcodecomplete_flags"}],"output":{"name":"cxcodecomplete_flags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",79,{"inputs":[{"name":"cxcodecomplete_flags"},{"name":"cxcodecomplete_flags"}],"output":{"name":"cxcodecomplete_flags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",79,{"inputs":[{"name":"cxcodecomplete_flags"},{"name":"cxcodecomplete_flags"}],"output":{"name":"cxcodecomplete_flags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",79,{"inputs":[{"name":"cxcodecomplete_flags"},{"name":"cxcodecomplete_flags"}],"output":{"name":"cxcodecomplete_flags"}}],[11,"not","","Returns the complement of this set of flags.",79,{"inputs":[{"name":"cxcodecomplete_flags"}],"output":{"name":"cxcodecomplete_flags"}}],[11,"from_iter","","",79,{"inputs":[{"name":"t"}],"output":{"name":"cxcodecomplete_flags"}}],[11,"hash","","",80,null],[11,"cmp","","",80,{"inputs":[{"name":"cxcompletioncontext"},{"name":"cxcompletioncontext"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",80,{"inputs":[{"name":"cxcompletioncontext"},{"name":"cxcompletioncontext"}],"output":{"name":"option"}}],[11,"lt","","",80,{"inputs":[{"name":"cxcompletioncontext"},{"name":"cxcompletioncontext"}],"output":{"name":"bool"}}],[11,"le","","",80,{"inputs":[{"name":"cxcompletioncontext"},{"name":"cxcompletioncontext"}],"output":{"name":"bool"}}],[11,"gt","","",80,{"inputs":[{"name":"cxcompletioncontext"},{"name":"cxcompletioncontext"}],"output":{"name":"bool"}}],[11,"ge","","",80,{"inputs":[{"name":"cxcompletioncontext"},{"name":"cxcompletioncontext"}],"output":{"name":"bool"}}],[11,"clone","","",80,{"inputs":[{"name":"cxcompletioncontext"}],"output":{"name":"cxcompletioncontext"}}],[11,"eq","","",80,{"inputs":[{"name":"cxcompletioncontext"},{"name":"cxcompletioncontext"}],"output":{"name":"bool"}}],[11,"ne","","",80,{"inputs":[{"name":"cxcompletioncontext"},{"name":"cxcompletioncontext"}],"output":{"name":"bool"}}],[11,"fmt","","",80,{"inputs":[{"name":"cxcompletioncontext"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",80,{"inputs":[],"output":{"name":"cxcompletioncontext"}}],[11,"all","","Returns the set containing all flags.",80,{"inputs":[],"output":{"name":"cxcompletioncontext"}}],[11,"bits","","Returns the raw value of the flags currently stored.",80,{"inputs":[{"name":"cxcompletioncontext"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",80,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",80,{"inputs":[{"name":"c_uint"}],"output":{"name":"cxcompletioncontext"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",80,{"inputs":[{"name":"cxcompletioncontext"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",80,{"inputs":[{"name":"cxcompletioncontext"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",80,{"inputs":[{"name":"cxcompletioncontext"},{"name":"cxcompletioncontext"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",80,{"inputs":[{"name":"cxcompletioncontext"},{"name":"cxcompletioncontext"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",80,{"inputs":[{"name":"cxcompletioncontext"},{"name":"cxcompletioncontext"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",80,{"inputs":[{"name":"cxcompletioncontext"},{"name":"cxcompletioncontext"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",80,{"inputs":[{"name":"cxcompletioncontext"},{"name":"cxcompletioncontext"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",80,{"inputs":[{"name":"cxcompletioncontext"},{"name":"cxcompletioncontext"}],"output":{"name":"cxcompletioncontext"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",80,{"inputs":[{"name":"cxcompletioncontext"},{"name":"cxcompletioncontext"}],"output":{"name":"cxcompletioncontext"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",80,{"inputs":[{"name":"cxcompletioncontext"},{"name":"cxcompletioncontext"}],"output":{"name":"cxcompletioncontext"}}],[11,"sub","","Returns the set difference of the two sets of flags.",80,{"inputs":[{"name":"cxcompletioncontext"},{"name":"cxcompletioncontext"}],"output":{"name":"cxcompletioncontext"}}],[11,"not","","Returns the complement of this set of flags.",80,{"inputs":[{"name":"cxcompletioncontext"}],"output":{"name":"cxcompletioncontext"}}],[11,"from_iter","","",80,{"inputs":[{"name":"t"}],"output":{"name":"cxcompletioncontext"}}],[11,"hash","","",81,null],[11,"cmp","","",81,{"inputs":[{"name":"cxdiagnosticdisplayoptions"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",81,{"inputs":[{"name":"cxdiagnosticdisplayoptions"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"option"}}],[11,"lt","","",81,{"inputs":[{"name":"cxdiagnosticdisplayoptions"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"bool"}}],[11,"le","","",81,{"inputs":[{"name":"cxdiagnosticdisplayoptions"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"bool"}}],[11,"gt","","",81,{"inputs":[{"name":"cxdiagnosticdisplayoptions"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"bool"}}],[11,"ge","","",81,{"inputs":[{"name":"cxdiagnosticdisplayoptions"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"bool"}}],[11,"clone","","",81,{"inputs":[{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"cxdiagnosticdisplayoptions"}}],[11,"eq","","",81,{"inputs":[{"name":"cxdiagnosticdisplayoptions"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"bool"}}],[11,"ne","","",81,{"inputs":[{"name":"cxdiagnosticdisplayoptions"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"bool"}}],[11,"fmt","","",81,{"inputs":[{"name":"cxdiagnosticdisplayoptions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",81,{"inputs":[],"output":{"name":"cxdiagnosticdisplayoptions"}}],[11,"all","","Returns the set containing all flags.",81,{"inputs":[],"output":{"name":"cxdiagnosticdisplayoptions"}}],[11,"bits","","Returns the raw value of the flags currently stored.",81,{"inputs":[{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",81,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",81,{"inputs":[{"name":"c_uint"}],"output":{"name":"cxdiagnosticdisplayoptions"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",81,{"inputs":[{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",81,{"inputs":[{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",81,{"inputs":[{"name":"cxdiagnosticdisplayoptions"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",81,{"inputs":[{"name":"cxdiagnosticdisplayoptions"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",81,{"inputs":[{"name":"cxdiagnosticdisplayoptions"},{"name":"cxdiagnosticdisplayoptions"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",81,{"inputs":[{"name":"cxdiagnosticdisplayoptions"},{"name":"cxdiagnosticdisplayoptions"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",81,{"inputs":[{"name":"cxdiagnosticdisplayoptions"},{"name":"cxdiagnosticdisplayoptions"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",81,{"inputs":[{"name":"cxdiagnosticdisplayoptions"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"cxdiagnosticdisplayoptions"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",81,{"inputs":[{"name":"cxdiagnosticdisplayoptions"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"cxdiagnosticdisplayoptions"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",81,{"inputs":[{"name":"cxdiagnosticdisplayoptions"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"cxdiagnosticdisplayoptions"}}],[11,"sub","","Returns the set difference of the two sets of flags.",81,{"inputs":[{"name":"cxdiagnosticdisplayoptions"},{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"cxdiagnosticdisplayoptions"}}],[11,"not","","Returns the complement of this set of flags.",81,{"inputs":[{"name":"cxdiagnosticdisplayoptions"}],"output":{"name":"cxdiagnosticdisplayoptions"}}],[11,"from_iter","","",81,{"inputs":[{"name":"t"}],"output":{"name":"cxdiagnosticdisplayoptions"}}],[11,"hash","","",82,null],[11,"cmp","","",82,{"inputs":[{"name":"cxglobaloptflags"},{"name":"cxglobaloptflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",82,{"inputs":[{"name":"cxglobaloptflags"},{"name":"cxglobaloptflags"}],"output":{"name":"option"}}],[11,"lt","","",82,{"inputs":[{"name":"cxglobaloptflags"},{"name":"cxglobaloptflags"}],"output":{"name":"bool"}}],[11,"le","","",82,{"inputs":[{"name":"cxglobaloptflags"},{"name":"cxglobaloptflags"}],"output":{"name":"bool"}}],[11,"gt","","",82,{"inputs":[{"name":"cxglobaloptflags"},{"name":"cxglobaloptflags"}],"output":{"name":"bool"}}],[11,"ge","","",82,{"inputs":[{"name":"cxglobaloptflags"},{"name":"cxglobaloptflags"}],"output":{"name":"bool"}}],[11,"clone","","",82,{"inputs":[{"name":"cxglobaloptflags"}],"output":{"name":"cxglobaloptflags"}}],[11,"eq","","",82,{"inputs":[{"name":"cxglobaloptflags"},{"name":"cxglobaloptflags"}],"output":{"name":"bool"}}],[11,"ne","","",82,{"inputs":[{"name":"cxglobaloptflags"},{"name":"cxglobaloptflags"}],"output":{"name":"bool"}}],[11,"fmt","","",82,{"inputs":[{"name":"cxglobaloptflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",82,{"inputs":[],"output":{"name":"cxglobaloptflags"}}],[11,"all","","Returns the set containing all flags.",82,{"inputs":[],"output":{"name":"cxglobaloptflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",82,{"inputs":[{"name":"cxglobaloptflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",82,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",82,{"inputs":[{"name":"c_uint"}],"output":{"name":"cxglobaloptflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",82,{"inputs":[{"name":"cxglobaloptflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",82,{"inputs":[{"name":"cxglobaloptflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",82,{"inputs":[{"name":"cxglobaloptflags"},{"name":"cxglobaloptflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",82,{"inputs":[{"name":"cxglobaloptflags"},{"name":"cxglobaloptflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",82,{"inputs":[{"name":"cxglobaloptflags"},{"name":"cxglobaloptflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",82,{"inputs":[{"name":"cxglobaloptflags"},{"name":"cxglobaloptflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",82,{"inputs":[{"name":"cxglobaloptflags"},{"name":"cxglobaloptflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",82,{"inputs":[{"name":"cxglobaloptflags"},{"name":"cxglobaloptflags"}],"output":{"name":"cxglobaloptflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",82,{"inputs":[{"name":"cxglobaloptflags"},{"name":"cxglobaloptflags"}],"output":{"name":"cxglobaloptflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",82,{"inputs":[{"name":"cxglobaloptflags"},{"name":"cxglobaloptflags"}],"output":{"name":"cxglobaloptflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",82,{"inputs":[{"name":"cxglobaloptflags"},{"name":"cxglobaloptflags"}],"output":{"name":"cxglobaloptflags"}}],[11,"not","","Returns the complement of this set of flags.",82,{"inputs":[{"name":"cxglobaloptflags"}],"output":{"name":"cxglobaloptflags"}}],[11,"from_iter","","",82,{"inputs":[{"name":"t"}],"output":{"name":"cxglobaloptflags"}}],[11,"hash","","",83,null],[11,"cmp","","",83,{"inputs":[{"name":"cxidxdeclinfoflags"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",83,{"inputs":[{"name":"cxidxdeclinfoflags"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"option"}}],[11,"lt","","",83,{"inputs":[{"name":"cxidxdeclinfoflags"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"bool"}}],[11,"le","","",83,{"inputs":[{"name":"cxidxdeclinfoflags"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"bool"}}],[11,"gt","","",83,{"inputs":[{"name":"cxidxdeclinfoflags"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"bool"}}],[11,"ge","","",83,{"inputs":[{"name":"cxidxdeclinfoflags"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"bool"}}],[11,"clone","","",83,{"inputs":[{"name":"cxidxdeclinfoflags"}],"output":{"name":"cxidxdeclinfoflags"}}],[11,"eq","","",83,{"inputs":[{"name":"cxidxdeclinfoflags"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"bool"}}],[11,"ne","","",83,{"inputs":[{"name":"cxidxdeclinfoflags"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"bool"}}],[11,"fmt","","",83,{"inputs":[{"name":"cxidxdeclinfoflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",83,{"inputs":[],"output":{"name":"cxidxdeclinfoflags"}}],[11,"all","","Returns the set containing all flags.",83,{"inputs":[],"output":{"name":"cxidxdeclinfoflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",83,{"inputs":[{"name":"cxidxdeclinfoflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",83,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",83,{"inputs":[{"name":"c_uint"}],"output":{"name":"cxidxdeclinfoflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",83,{"inputs":[{"name":"cxidxdeclinfoflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",83,{"inputs":[{"name":"cxidxdeclinfoflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",83,{"inputs":[{"name":"cxidxdeclinfoflags"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",83,{"inputs":[{"name":"cxidxdeclinfoflags"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",83,{"inputs":[{"name":"cxidxdeclinfoflags"},{"name":"cxidxdeclinfoflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",83,{"inputs":[{"name":"cxidxdeclinfoflags"},{"name":"cxidxdeclinfoflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",83,{"inputs":[{"name":"cxidxdeclinfoflags"},{"name":"cxidxdeclinfoflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",83,{"inputs":[{"name":"cxidxdeclinfoflags"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"cxidxdeclinfoflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",83,{"inputs":[{"name":"cxidxdeclinfoflags"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"cxidxdeclinfoflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",83,{"inputs":[{"name":"cxidxdeclinfoflags"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"cxidxdeclinfoflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",83,{"inputs":[{"name":"cxidxdeclinfoflags"},{"name":"cxidxdeclinfoflags"}],"output":{"name":"cxidxdeclinfoflags"}}],[11,"not","","Returns the complement of this set of flags.",83,{"inputs":[{"name":"cxidxdeclinfoflags"}],"output":{"name":"cxidxdeclinfoflags"}}],[11,"from_iter","","",83,{"inputs":[{"name":"t"}],"output":{"name":"cxidxdeclinfoflags"}}],[11,"hash","","",84,null],[11,"cmp","","",84,{"inputs":[{"name":"cxindexoptflags"},{"name":"cxindexoptflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",84,{"inputs":[{"name":"cxindexoptflags"},{"name":"cxindexoptflags"}],"output":{"name":"option"}}],[11,"lt","","",84,{"inputs":[{"name":"cxindexoptflags"},{"name":"cxindexoptflags"}],"output":{"name":"bool"}}],[11,"le","","",84,{"inputs":[{"name":"cxindexoptflags"},{"name":"cxindexoptflags"}],"output":{"name":"bool"}}],[11,"gt","","",84,{"inputs":[{"name":"cxindexoptflags"},{"name":"cxindexoptflags"}],"output":{"name":"bool"}}],[11,"ge","","",84,{"inputs":[{"name":"cxindexoptflags"},{"name":"cxindexoptflags"}],"output":{"name":"bool"}}],[11,"clone","","",84,{"inputs":[{"name":"cxindexoptflags"}],"output":{"name":"cxindexoptflags"}}],[11,"eq","","",84,{"inputs":[{"name":"cxindexoptflags"},{"name":"cxindexoptflags"}],"output":{"name":"bool"}}],[11,"ne","","",84,{"inputs":[{"name":"cxindexoptflags"},{"name":"cxindexoptflags"}],"output":{"name":"bool"}}],[11,"fmt","","",84,{"inputs":[{"name":"cxindexoptflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",84,{"inputs":[],"output":{"name":"cxindexoptflags"}}],[11,"all","","Returns the set containing all flags.",84,{"inputs":[],"output":{"name":"cxindexoptflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",84,{"inputs":[{"name":"cxindexoptflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",84,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",84,{"inputs":[{"name":"c_uint"}],"output":{"name":"cxindexoptflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",84,{"inputs":[{"name":"cxindexoptflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",84,{"inputs":[{"name":"cxindexoptflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",84,{"inputs":[{"name":"cxindexoptflags"},{"name":"cxindexoptflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",84,{"inputs":[{"name":"cxindexoptflags"},{"name":"cxindexoptflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",84,{"inputs":[{"name":"cxindexoptflags"},{"name":"cxindexoptflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",84,{"inputs":[{"name":"cxindexoptflags"},{"name":"cxindexoptflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",84,{"inputs":[{"name":"cxindexoptflags"},{"name":"cxindexoptflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",84,{"inputs":[{"name":"cxindexoptflags"},{"name":"cxindexoptflags"}],"output":{"name":"cxindexoptflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",84,{"inputs":[{"name":"cxindexoptflags"},{"name":"cxindexoptflags"}],"output":{"name":"cxindexoptflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",84,{"inputs":[{"name":"cxindexoptflags"},{"name":"cxindexoptflags"}],"output":{"name":"cxindexoptflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",84,{"inputs":[{"name":"cxindexoptflags"},{"name":"cxindexoptflags"}],"output":{"name":"cxindexoptflags"}}],[11,"not","","Returns the complement of this set of flags.",84,{"inputs":[{"name":"cxindexoptflags"}],"output":{"name":"cxindexoptflags"}}],[11,"from_iter","","",84,{"inputs":[{"name":"t"}],"output":{"name":"cxindexoptflags"}}],[11,"hash","","",85,null],[11,"cmp","","",85,{"inputs":[{"name":"cxnamerefflags"},{"name":"cxnamerefflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",85,{"inputs":[{"name":"cxnamerefflags"},{"name":"cxnamerefflags"}],"output":{"name":"option"}}],[11,"lt","","",85,{"inputs":[{"name":"cxnamerefflags"},{"name":"cxnamerefflags"}],"output":{"name":"bool"}}],[11,"le","","",85,{"inputs":[{"name":"cxnamerefflags"},{"name":"cxnamerefflags"}],"output":{"name":"bool"}}],[11,"gt","","",85,{"inputs":[{"name":"cxnamerefflags"},{"name":"cxnamerefflags"}],"output":{"name":"bool"}}],[11,"ge","","",85,{"inputs":[{"name":"cxnamerefflags"},{"name":"cxnamerefflags"}],"output":{"name":"bool"}}],[11,"clone","","",85,{"inputs":[{"name":"cxnamerefflags"}],"output":{"name":"cxnamerefflags"}}],[11,"eq","","",85,{"inputs":[{"name":"cxnamerefflags"},{"name":"cxnamerefflags"}],"output":{"name":"bool"}}],[11,"ne","","",85,{"inputs":[{"name":"cxnamerefflags"},{"name":"cxnamerefflags"}],"output":{"name":"bool"}}],[11,"fmt","","",85,{"inputs":[{"name":"cxnamerefflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",85,{"inputs":[],"output":{"name":"cxnamerefflags"}}],[11,"all","","Returns the set containing all flags.",85,{"inputs":[],"output":{"name":"cxnamerefflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",85,{"inputs":[{"name":"cxnamerefflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",85,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",85,{"inputs":[{"name":"c_uint"}],"output":{"name":"cxnamerefflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",85,{"inputs":[{"name":"cxnamerefflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",85,{"inputs":[{"name":"cxnamerefflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",85,{"inputs":[{"name":"cxnamerefflags"},{"name":"cxnamerefflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",85,{"inputs":[{"name":"cxnamerefflags"},{"name":"cxnamerefflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",85,{"inputs":[{"name":"cxnamerefflags"},{"name":"cxnamerefflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",85,{"inputs":[{"name":"cxnamerefflags"},{"name":"cxnamerefflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",85,{"inputs":[{"name":"cxnamerefflags"},{"name":"cxnamerefflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",85,{"inputs":[{"name":"cxnamerefflags"},{"name":"cxnamerefflags"}],"output":{"name":"cxnamerefflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",85,{"inputs":[{"name":"cxnamerefflags"},{"name":"cxnamerefflags"}],"output":{"name":"cxnamerefflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",85,{"inputs":[{"name":"cxnamerefflags"},{"name":"cxnamerefflags"}],"output":{"name":"cxnamerefflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",85,{"inputs":[{"name":"cxnamerefflags"},{"name":"cxnamerefflags"}],"output":{"name":"cxnamerefflags"}}],[11,"not","","Returns the complement of this set of flags.",85,{"inputs":[{"name":"cxnamerefflags"}],"output":{"name":"cxnamerefflags"}}],[11,"from_iter","","",85,{"inputs":[{"name":"t"}],"output":{"name":"cxnamerefflags"}}],[11,"hash","","",86,null],[11,"cmp","","",86,{"inputs":[{"name":"cxobjcdeclqualifierkind"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",86,{"inputs":[{"name":"cxobjcdeclqualifierkind"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"option"}}],[11,"lt","","",86,{"inputs":[{"name":"cxobjcdeclqualifierkind"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"bool"}}],[11,"le","","",86,{"inputs":[{"name":"cxobjcdeclqualifierkind"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"bool"}}],[11,"gt","","",86,{"inputs":[{"name":"cxobjcdeclqualifierkind"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"bool"}}],[11,"ge","","",86,{"inputs":[{"name":"cxobjcdeclqualifierkind"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"bool"}}],[11,"clone","","",86,{"inputs":[{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"cxobjcdeclqualifierkind"}}],[11,"eq","","",86,{"inputs":[{"name":"cxobjcdeclqualifierkind"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"cxobjcdeclqualifierkind"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"bool"}}],[11,"fmt","","",86,{"inputs":[{"name":"cxobjcdeclqualifierkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",86,{"inputs":[],"output":{"name":"cxobjcdeclqualifierkind"}}],[11,"all","","Returns the set containing all flags.",86,{"inputs":[],"output":{"name":"cxobjcdeclqualifierkind"}}],[11,"bits","","Returns the raw value of the flags currently stored.",86,{"inputs":[{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",86,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",86,{"inputs":[{"name":"c_uint"}],"output":{"name":"cxobjcdeclqualifierkind"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",86,{"inputs":[{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",86,{"inputs":[{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",86,{"inputs":[{"name":"cxobjcdeclqualifierkind"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",86,{"inputs":[{"name":"cxobjcdeclqualifierkind"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",86,{"inputs":[{"name":"cxobjcdeclqualifierkind"},{"name":"cxobjcdeclqualifierkind"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",86,{"inputs":[{"name":"cxobjcdeclqualifierkind"},{"name":"cxobjcdeclqualifierkind"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",86,{"inputs":[{"name":"cxobjcdeclqualifierkind"},{"name":"cxobjcdeclqualifierkind"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",86,{"inputs":[{"name":"cxobjcdeclqualifierkind"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"cxobjcdeclqualifierkind"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",86,{"inputs":[{"name":"cxobjcdeclqualifierkind"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"cxobjcdeclqualifierkind"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",86,{"inputs":[{"name":"cxobjcdeclqualifierkind"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"cxobjcdeclqualifierkind"}}],[11,"sub","","Returns the set difference of the two sets of flags.",86,{"inputs":[{"name":"cxobjcdeclqualifierkind"},{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"cxobjcdeclqualifierkind"}}],[11,"not","","Returns the complement of this set of flags.",86,{"inputs":[{"name":"cxobjcdeclqualifierkind"}],"output":{"name":"cxobjcdeclqualifierkind"}}],[11,"from_iter","","",86,{"inputs":[{"name":"t"}],"output":{"name":"cxobjcdeclqualifierkind"}}],[11,"hash","","",87,null],[11,"cmp","","",87,{"inputs":[{"name":"cxobjcpropertyattrkind"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",87,{"inputs":[{"name":"cxobjcpropertyattrkind"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"option"}}],[11,"lt","","",87,{"inputs":[{"name":"cxobjcpropertyattrkind"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"bool"}}],[11,"le","","",87,{"inputs":[{"name":"cxobjcpropertyattrkind"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"bool"}}],[11,"gt","","",87,{"inputs":[{"name":"cxobjcpropertyattrkind"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"bool"}}],[11,"ge","","",87,{"inputs":[{"name":"cxobjcpropertyattrkind"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"bool"}}],[11,"clone","","",87,{"inputs":[{"name":"cxobjcpropertyattrkind"}],"output":{"name":"cxobjcpropertyattrkind"}}],[11,"eq","","",87,{"inputs":[{"name":"cxobjcpropertyattrkind"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"bool"}}],[11,"ne","","",87,{"inputs":[{"name":"cxobjcpropertyattrkind"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"bool"}}],[11,"fmt","","",87,{"inputs":[{"name":"cxobjcpropertyattrkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",87,{"inputs":[],"output":{"name":"cxobjcpropertyattrkind"}}],[11,"all","","Returns the set containing all flags.",87,{"inputs":[],"output":{"name":"cxobjcpropertyattrkind"}}],[11,"bits","","Returns the raw value of the flags currently stored.",87,{"inputs":[{"name":"cxobjcpropertyattrkind"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",87,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",87,{"inputs":[{"name":"c_uint"}],"output":{"name":"cxobjcpropertyattrkind"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",87,{"inputs":[{"name":"cxobjcpropertyattrkind"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",87,{"inputs":[{"name":"cxobjcpropertyattrkind"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",87,{"inputs":[{"name":"cxobjcpropertyattrkind"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",87,{"inputs":[{"name":"cxobjcpropertyattrkind"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",87,{"inputs":[{"name":"cxobjcpropertyattrkind"},{"name":"cxobjcpropertyattrkind"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",87,{"inputs":[{"name":"cxobjcpropertyattrkind"},{"name":"cxobjcpropertyattrkind"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",87,{"inputs":[{"name":"cxobjcpropertyattrkind"},{"name":"cxobjcpropertyattrkind"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",87,{"inputs":[{"name":"cxobjcpropertyattrkind"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"cxobjcpropertyattrkind"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",87,{"inputs":[{"name":"cxobjcpropertyattrkind"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"cxobjcpropertyattrkind"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",87,{"inputs":[{"name":"cxobjcpropertyattrkind"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"cxobjcpropertyattrkind"}}],[11,"sub","","Returns the set difference of the two sets of flags.",87,{"inputs":[{"name":"cxobjcpropertyattrkind"},{"name":"cxobjcpropertyattrkind"}],"output":{"name":"cxobjcpropertyattrkind"}}],[11,"not","","Returns the complement of this set of flags.",87,{"inputs":[{"name":"cxobjcpropertyattrkind"}],"output":{"name":"cxobjcpropertyattrkind"}}],[11,"from_iter","","",87,{"inputs":[{"name":"t"}],"output":{"name":"cxobjcpropertyattrkind"}}],[11,"hash","","",88,null],[11,"cmp","","",88,{"inputs":[{"name":"cxreparse_flags"},{"name":"cxreparse_flags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",88,{"inputs":[{"name":"cxreparse_flags"},{"name":"cxreparse_flags"}],"output":{"name":"option"}}],[11,"lt","","",88,{"inputs":[{"name":"cxreparse_flags"},{"name":"cxreparse_flags"}],"output":{"name":"bool"}}],[11,"le","","",88,{"inputs":[{"name":"cxreparse_flags"},{"name":"cxreparse_flags"}],"output":{"name":"bool"}}],[11,"gt","","",88,{"inputs":[{"name":"cxreparse_flags"},{"name":"cxreparse_flags"}],"output":{"name":"bool"}}],[11,"ge","","",88,{"inputs":[{"name":"cxreparse_flags"},{"name":"cxreparse_flags"}],"output":{"name":"bool"}}],[11,"clone","","",88,{"inputs":[{"name":"cxreparse_flags"}],"output":{"name":"cxreparse_flags"}}],[11,"eq","","",88,{"inputs":[{"name":"cxreparse_flags"},{"name":"cxreparse_flags"}],"output":{"name":"bool"}}],[11,"ne","","",88,{"inputs":[{"name":"cxreparse_flags"},{"name":"cxreparse_flags"}],"output":{"name":"bool"}}],[11,"fmt","","",88,{"inputs":[{"name":"cxreparse_flags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",88,{"inputs":[],"output":{"name":"cxreparse_flags"}}],[11,"all","","Returns the set containing all flags.",88,{"inputs":[],"output":{"name":"cxreparse_flags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",88,{"inputs":[{"name":"cxreparse_flags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",88,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",88,{"inputs":[{"name":"c_uint"}],"output":{"name":"cxreparse_flags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",88,{"inputs":[{"name":"cxreparse_flags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",88,{"inputs":[{"name":"cxreparse_flags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",88,{"inputs":[{"name":"cxreparse_flags"},{"name":"cxreparse_flags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",88,{"inputs":[{"name":"cxreparse_flags"},{"name":"cxreparse_flags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",88,{"inputs":[{"name":"cxreparse_flags"},{"name":"cxreparse_flags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",88,{"inputs":[{"name":"cxreparse_flags"},{"name":"cxreparse_flags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",88,{"inputs":[{"name":"cxreparse_flags"},{"name":"cxreparse_flags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",88,{"inputs":[{"name":"cxreparse_flags"},{"name":"cxreparse_flags"}],"output":{"name":"cxreparse_flags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",88,{"inputs":[{"name":"cxreparse_flags"},{"name":"cxreparse_flags"}],"output":{"name":"cxreparse_flags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",88,{"inputs":[{"name":"cxreparse_flags"},{"name":"cxreparse_flags"}],"output":{"name":"cxreparse_flags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",88,{"inputs":[{"name":"cxreparse_flags"},{"name":"cxreparse_flags"}],"output":{"name":"cxreparse_flags"}}],[11,"not","","Returns the complement of this set of flags.",88,{"inputs":[{"name":"cxreparse_flags"}],"output":{"name":"cxreparse_flags"}}],[11,"from_iter","","",88,{"inputs":[{"name":"t"}],"output":{"name":"cxreparse_flags"}}],[11,"hash","","",89,null],[11,"cmp","","",89,{"inputs":[{"name":"cxsavetranslationunit_flags"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",89,{"inputs":[{"name":"cxsavetranslationunit_flags"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"option"}}],[11,"lt","","",89,{"inputs":[{"name":"cxsavetranslationunit_flags"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"bool"}}],[11,"le","","",89,{"inputs":[{"name":"cxsavetranslationunit_flags"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"bool"}}],[11,"gt","","",89,{"inputs":[{"name":"cxsavetranslationunit_flags"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"bool"}}],[11,"ge","","",89,{"inputs":[{"name":"cxsavetranslationunit_flags"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"bool"}}],[11,"clone","","",89,{"inputs":[{"name":"cxsavetranslationunit_flags"}],"output":{"name":"cxsavetranslationunit_flags"}}],[11,"eq","","",89,{"inputs":[{"name":"cxsavetranslationunit_flags"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"bool"}}],[11,"ne","","",89,{"inputs":[{"name":"cxsavetranslationunit_flags"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"bool"}}],[11,"fmt","","",89,{"inputs":[{"name":"cxsavetranslationunit_flags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",89,{"inputs":[],"output":{"name":"cxsavetranslationunit_flags"}}],[11,"all","","Returns the set containing all flags.",89,{"inputs":[],"output":{"name":"cxsavetranslationunit_flags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",89,{"inputs":[{"name":"cxsavetranslationunit_flags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",89,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",89,{"inputs":[{"name":"c_uint"}],"output":{"name":"cxsavetranslationunit_flags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",89,{"inputs":[{"name":"cxsavetranslationunit_flags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",89,{"inputs":[{"name":"cxsavetranslationunit_flags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",89,{"inputs":[{"name":"cxsavetranslationunit_flags"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",89,{"inputs":[{"name":"cxsavetranslationunit_flags"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",89,{"inputs":[{"name":"cxsavetranslationunit_flags"},{"name":"cxsavetranslationunit_flags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",89,{"inputs":[{"name":"cxsavetranslationunit_flags"},{"name":"cxsavetranslationunit_flags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",89,{"inputs":[{"name":"cxsavetranslationunit_flags"},{"name":"cxsavetranslationunit_flags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",89,{"inputs":[{"name":"cxsavetranslationunit_flags"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"cxsavetranslationunit_flags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",89,{"inputs":[{"name":"cxsavetranslationunit_flags"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"cxsavetranslationunit_flags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",89,{"inputs":[{"name":"cxsavetranslationunit_flags"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"cxsavetranslationunit_flags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",89,{"inputs":[{"name":"cxsavetranslationunit_flags"},{"name":"cxsavetranslationunit_flags"}],"output":{"name":"cxsavetranslationunit_flags"}}],[11,"not","","Returns the complement of this set of flags.",89,{"inputs":[{"name":"cxsavetranslationunit_flags"}],"output":{"name":"cxsavetranslationunit_flags"}}],[11,"from_iter","","",89,{"inputs":[{"name":"t"}],"output":{"name":"cxsavetranslationunit_flags"}}],[11,"hash","","",90,null],[11,"cmp","","",90,{"inputs":[{"name":"cxtranslationunit_flags"},{"name":"cxtranslationunit_flags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",90,{"inputs":[{"name":"cxtranslationunit_flags"},{"name":"cxtranslationunit_flags"}],"output":{"name":"option"}}],[11,"lt","","",90,{"inputs":[{"name":"cxtranslationunit_flags"},{"name":"cxtranslationunit_flags"}],"output":{"name":"bool"}}],[11,"le","","",90,{"inputs":[{"name":"cxtranslationunit_flags"},{"name":"cxtranslationunit_flags"}],"output":{"name":"bool"}}],[11,"gt","","",90,{"inputs":[{"name":"cxtranslationunit_flags"},{"name":"cxtranslationunit_flags"}],"output":{"name":"bool"}}],[11,"ge","","",90,{"inputs":[{"name":"cxtranslationunit_flags"},{"name":"cxtranslationunit_flags"}],"output":{"name":"bool"}}],[11,"clone","","",90,{"inputs":[{"name":"cxtranslationunit_flags"}],"output":{"name":"cxtranslationunit_flags"}}],[11,"eq","","",90,{"inputs":[{"name":"cxtranslationunit_flags"},{"name":"cxtranslationunit_flags"}],"output":{"name":"bool"}}],[11,"ne","","",90,{"inputs":[{"name":"cxtranslationunit_flags"},{"name":"cxtranslationunit_flags"}],"output":{"name":"bool"}}],[11,"fmt","","",90,{"inputs":[{"name":"cxtranslationunit_flags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",90,{"inputs":[],"output":{"name":"cxtranslationunit_flags"}}],[11,"all","","Returns the set containing all flags.",90,{"inputs":[],"output":{"name":"cxtranslationunit_flags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",90,{"inputs":[{"name":"cxtranslationunit_flags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",90,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",90,{"inputs":[{"name":"c_uint"}],"output":{"name":"cxtranslationunit_flags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",90,{"inputs":[{"name":"cxtranslationunit_flags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",90,{"inputs":[{"name":"cxtranslationunit_flags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",90,{"inputs":[{"name":"cxtranslationunit_flags"},{"name":"cxtranslationunit_flags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",90,{"inputs":[{"name":"cxtranslationunit_flags"},{"name":"cxtranslationunit_flags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",90,{"inputs":[{"name":"cxtranslationunit_flags"},{"name":"cxtranslationunit_flags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",90,{"inputs":[{"name":"cxtranslationunit_flags"},{"name":"cxtranslationunit_flags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",90,{"inputs":[{"name":"cxtranslationunit_flags"},{"name":"cxtranslationunit_flags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",90,{"inputs":[{"name":"cxtranslationunit_flags"},{"name":"cxtranslationunit_flags"}],"output":{"name":"cxtranslationunit_flags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",90,{"inputs":[{"name":"cxtranslationunit_flags"},{"name":"cxtranslationunit_flags"}],"output":{"name":"cxtranslationunit_flags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",90,{"inputs":[{"name":"cxtranslationunit_flags"},{"name":"cxtranslationunit_flags"}],"output":{"name":"cxtranslationunit_flags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",90,{"inputs":[{"name":"cxtranslationunit_flags"},{"name":"cxtranslationunit_flags"}],"output":{"name":"cxtranslationunit_flags"}}],[11,"not","","Returns the complement of this set of flags.",90,{"inputs":[{"name":"cxtranslationunit_flags"}],"output":{"name":"cxtranslationunit_flags"}}],[11,"from_iter","","",90,{"inputs":[{"name":"t"}],"output":{"name":"cxtranslationunit_flags"}}],[11,"fmt","","",0,{"inputs":[{"name":"cxcompilationdatabase"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"cxcompilationdatabase"}],"output":{"name":"cxcompilationdatabase"}}],[11,"fmt","","",1,{"inputs":[{"name":"cxcompilecommand"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"cxcompilecommand"}],"output":{"name":"cxcompilecommand"}}],[11,"fmt","","",2,{"inputs":[{"name":"cxcompilecommands"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"cxcompilecommands"}],"output":{"name":"cxcompilecommands"}}],[11,"fmt","","",3,{"inputs":[{"name":"cxcompletionstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"cxcompletionstring"}],"output":{"name":"cxcompletionstring"}}],[11,"fmt","","",4,{"inputs":[{"name":"cxcursorset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"cxcursorset"}],"output":{"name":"cxcursorset"}}],[11,"fmt","","",5,{"inputs":[{"name":"cxdiagnostic"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"cxdiagnostic"}],"output":{"name":"cxdiagnostic"}}],[11,"fmt","","",6,{"inputs":[{"name":"cxdiagnosticset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"cxdiagnosticset"}],"output":{"name":"cxdiagnosticset"}}],[11,"fmt","","",7,{"inputs":[{"name":"cxfile"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"cxfile"}],"output":{"name":"cxfile"}}],[11,"fmt","","",8,{"inputs":[{"name":"cxidxclientastfile"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"cxidxclientastfile"}],"output":{"name":"cxidxclientastfile"}}],[11,"fmt","","",9,{"inputs":[{"name":"cxidxclientcontainer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"cxidxclientcontainer"}],"output":{"name":"cxidxclientcontainer"}}],[11,"fmt","","",10,{"inputs":[{"name":"cxidxcliententity"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"cxidxcliententity"}],"output":{"name":"cxidxcliententity"}}],[11,"fmt","","",11,{"inputs":[{"name":"cxidxclientfile"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",11,{"inputs":[{"name":"cxidxclientfile"}],"output":{"name":"cxidxclientfile"}}],[11,"fmt","","",12,{"inputs":[{"name":"cxindex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",12,{"inputs":[{"name":"cxindex"}],"output":{"name":"cxindex"}}],[11,"fmt","","",13,{"inputs":[{"name":"cxindexaction"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",13,{"inputs":[{"name":"cxindexaction"}],"output":{"name":"cxindexaction"}}],[11,"fmt","","",14,{"inputs":[{"name":"cxmodule"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",14,{"inputs":[{"name":"cxmodule"}],"output":{"name":"cxmodule"}}],[11,"fmt","","",15,{"inputs":[{"name":"cxremapping"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"cxremapping"}],"output":{"name":"cxremapping"}}],[11,"fmt","","",16,{"inputs":[{"name":"cxtranslationunit"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",16,{"inputs":[{"name":"cxtranslationunit"}],"output":{"name":"cxtranslationunit"}}],[11,"fmt","","",17,{"inputs":[{"name":"cxcodecompleteresults"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",17,{"inputs":[{"name":"cxcodecompleteresults"}],"output":{"name":"cxcodecompleteresults"}}],[11,"fmt","","",18,{"inputs":[{"name":"cxcompletionresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"cxcompletionresult"}],"output":{"name":"cxcompletionresult"}}],[11,"fmt","","",19,{"inputs":[{"name":"cxcursor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"cxcursor"}],"output":{"name":"cxcursor"}}],[11,"fmt","","",20,{"inputs":[{"name":"cxcursorandrangevisitor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",20,{"inputs":[{"name":"cxcursorandrangevisitor"}],"output":{"name":"cxcursorandrangevisitor"}}],[11,"fmt","","",21,{"inputs":[{"name":"cxfileuniqueid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",21,{"inputs":[{"name":"cxfileuniqueid"}],"output":{"name":"cxfileuniqueid"}}],[11,"fmt","","",22,{"inputs":[{"name":"cxidxattrinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",22,{"inputs":[{"name":"cxidxattrinfo"}],"output":{"name":"cxidxattrinfo"}}],[11,"fmt","","",23,{"inputs":[{"name":"cxidxbaseclassinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",23,{"inputs":[{"name":"cxidxbaseclassinfo"}],"output":{"name":"cxidxbaseclassinfo"}}],[11,"fmt","","",24,{"inputs":[{"name":"cxidxcxxclassdeclinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"cxidxcxxclassdeclinfo"}],"output":{"name":"cxidxcxxclassdeclinfo"}}],[11,"fmt","","",25,{"inputs":[{"name":"cxidxcontainerinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",25,{"inputs":[{"name":"cxidxcontainerinfo"}],"output":{"name":"cxidxcontainerinfo"}}],[11,"fmt","","",26,{"inputs":[{"name":"cxidxdeclinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",26,{"inputs":[{"name":"cxidxdeclinfo"}],"output":{"name":"cxidxdeclinfo"}}],[11,"fmt","","",27,{"inputs":[{"name":"cxidxentityinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",27,{"inputs":[{"name":"cxidxentityinfo"}],"output":{"name":"cxidxentityinfo"}}],[11,"fmt","","",28,{"inputs":[{"name":"cxidxentityrefinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",28,{"inputs":[{"name":"cxidxentityrefinfo"}],"output":{"name":"cxidxentityrefinfo"}}],[11,"fmt","","",29,{"inputs":[{"name":"cxidxiboutletcollectionattrinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",29,{"inputs":[{"name":"cxidxiboutletcollectionattrinfo"}],"output":{"name":"cxidxiboutletcollectionattrinfo"}}],[11,"fmt","","",30,{"inputs":[{"name":"cxidximportedastfileinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",30,{"inputs":[{"name":"cxidximportedastfileinfo"}],"output":{"name":"cxidximportedastfileinfo"}}],[11,"fmt","","",31,{"inputs":[{"name":"cxidxincludedfileinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",31,{"inputs":[{"name":"cxidxincludedfileinfo"}],"output":{"name":"cxidxincludedfileinfo"}}],[11,"fmt","","",32,{"inputs":[{"name":"cxidxloc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"cxidxloc"}],"output":{"name":"cxidxloc"}}],[11,"fmt","","",33,{"inputs":[{"name":"cxidxobjccategorydeclinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",33,{"inputs":[{"name":"cxidxobjccategorydeclinfo"}],"output":{"name":"cxidxobjccategorydeclinfo"}}],[11,"fmt","","",34,{"inputs":[{"name":"cxidxobjccontainerdeclinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",34,{"inputs":[{"name":"cxidxobjccontainerdeclinfo"}],"output":{"name":"cxidxobjccontainerdeclinfo"}}],[11,"fmt","","",35,{"inputs":[{"name":"cxidxobjcinterfacedeclinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",35,{"inputs":[{"name":"cxidxobjcinterfacedeclinfo"}],"output":{"name":"cxidxobjcinterfacedeclinfo"}}],[11,"fmt","","",36,{"inputs":[{"name":"cxidxobjcpropertydeclinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",36,{"inputs":[{"name":"cxidxobjcpropertydeclinfo"}],"output":{"name":"cxidxobjcpropertydeclinfo"}}],[11,"fmt","","",37,{"inputs":[{"name":"cxidxobjcprotocolrefinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",37,{"inputs":[{"name":"cxidxobjcprotocolrefinfo"}],"output":{"name":"cxidxobjcprotocolrefinfo"}}],[11,"fmt","","",38,{"inputs":[{"name":"cxidxobjcprotocolreflistinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",38,{"inputs":[{"name":"cxidxobjcprotocolreflistinfo"}],"output":{"name":"cxidxobjcprotocolreflistinfo"}}],[11,"fmt","","",39,{"inputs":[{"name":"cxplatformavailability"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",39,{"inputs":[{"name":"cxplatformavailability"}],"output":{"name":"cxplatformavailability"}}],[11,"fmt","","",40,{"inputs":[{"name":"cxsourcelocation"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",40,{"inputs":[{"name":"cxsourcelocation"}],"output":{"name":"cxsourcelocation"}}],[11,"fmt","","",41,{"inputs":[{"name":"cxsourcerange"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",41,{"inputs":[{"name":"cxsourcerange"}],"output":{"name":"cxsourcerange"}}],[11,"fmt","","",42,{"inputs":[{"name":"cxsourcerangelist"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",42,{"inputs":[{"name":"cxsourcerangelist"}],"output":{"name":"cxsourcerangelist"}}],[11,"fmt","","",43,{"inputs":[{"name":"cxstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",43,{"inputs":[{"name":"cxstring"}],"output":{"name":"cxstring"}}],[11,"fmt","","",44,{"inputs":[{"name":"cxturesourceusage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",44,{"inputs":[{"name":"cxturesourceusage"}],"output":{"name":"cxturesourceusage"}}],[11,"fmt","","",45,{"inputs":[{"name":"cxturesourceusageentry"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",45,{"inputs":[{"name":"cxturesourceusageentry"}],"output":{"name":"cxturesourceusageentry"}}],[11,"fmt","","",46,{"inputs":[{"name":"cxtoken"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",46,{"inputs":[{"name":"cxtoken"}],"output":{"name":"cxtoken"}}],[11,"fmt","","",47,{"inputs":[{"name":"cxtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",47,{"inputs":[{"name":"cxtype"}],"output":{"name":"cxtype"}}],[11,"fmt","","",48,{"inputs":[{"name":"cxunsavedfile"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",48,{"inputs":[{"name":"cxunsavedfile"}],"output":{"name":"cxunsavedfile"}}],[11,"fmt","","",49,{"inputs":[{"name":"cxversion"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",49,{"inputs":[{"name":"cxversion"}],"output":{"name":"cxversion"}}],[11,"fmt","","",50,{"inputs":[{"name":"indexercallbacks"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",50,{"inputs":[{"name":"indexercallbacks"}],"output":{"name":"indexercallbacks"}}]],"paths":[[3,"CXCompilationDatabase"],[3,"CXCompileCommand"],[3,"CXCompileCommands"],[3,"CXCompletionString"],[3,"CXCursorSet"],[3,"CXDiagnostic"],[3,"CXDiagnosticSet"],[3,"CXFile"],[3,"CXIdxClientASTFile"],[3,"CXIdxClientContainer"],[3,"CXIdxClientEntity"],[3,"CXIdxClientFile"],[3,"CXIndex"],[3,"CXIndexAction"],[3,"CXModule"],[3,"CXRemapping"],[3,"CXTranslationUnit"],[3,"CXCodeCompleteResults"],[3,"CXCompletionResult"],[3,"CXCursor"],[3,"CXCursorAndRangeVisitor"],[3,"CXFileUniqueID"],[3,"CXIdxAttrInfo"],[3,"CXIdxBaseClassInfo"],[3,"CXIdxCXXClassDeclInfo"],[3,"CXIdxContainerInfo"],[3,"CXIdxDeclInfo"],[3,"CXIdxEntityInfo"],[3,"CXIdxEntityRefInfo"],[3,"CXIdxIBOutletCollectionAttrInfo"],[3,"CXIdxImportedASTFileInfo"],[3,"CXIdxIncludedFileInfo"],[3,"CXIdxLoc"],[3,"CXIdxObjCCategoryDeclInfo"],[3,"CXIdxObjCContainerDeclInfo"],[3,"CXIdxObjCInterfaceDeclInfo"],[3,"CXIdxObjCPropertyDeclInfo"],[3,"CXIdxObjCProtocolRefInfo"],[3,"CXIdxObjCProtocolRefListInfo"],[3,"CXPlatformAvailability"],[3,"CXSourceLocation"],[3,"CXSourceRange"],[3,"CXSourceRangeList"],[3,"CXString"],[3,"CXTUResourceUsage"],[3,"CXTUResourceUsageEntry"],[3,"CXToken"],[3,"CXType"],[3,"CXUnsavedFile"],[3,"CXVersion"],[3,"IndexerCallbacks"],[4,"CXAvailabilityKind"],[4,"CXCallingConv"],[4,"CXChildVisitResult"],[4,"CXCompilationDatabase_Error"],[4,"CXCompletionChunkKind"],[4,"CXCursorKind"],[4,"CXDiagnosticSeverity"],[4,"CXErrorCode"],[4,"CXIdxAttrKind"],[4,"CXIdxEntityCXXTemplateKind"],[4,"CXIdxEntityKind"],[4,"CXIdxEntityLanguage"],[4,"CXIdxEntityRefKind"],[4,"CXIdxObjCContainerKind"],[4,"CXLanguageKind"],[4,"CXLinkageKind"],[4,"CXLoadDiag_Error"],[4,"CXRefQualifierKind"],[4,"CXResult"],[4,"CXSaveError"],[4,"CXTUResourceUsageKind"],[4,"CXTemplateArgumentKind"],[4,"CXTokenKind"],[4,"CXTypeKind"],[4,"CXTypeLayoutError"],[4,"CXVisitorResult"],[4,"CX_CXXAccessSpecifier"],[4,"CX_StorageClass"],[3,"CXCodeComplete_Flags"],[3,"CXCompletionContext"],[3,"CXDiagnosticDisplayOptions"],[3,"CXGlobalOptFlags"],[3,"CXIdxDeclInfoFlags"],[3,"CXIndexOptFlags"],[3,"CXNameRefFlags"],[3,"CXObjCDeclQualifierKind"],[3,"CXObjCPropertyAttrKind"],[3,"CXReparse_Flags"],[3,"CXSaveTranslationUnit_Flags"],[3,"CXTranslationUnit_Flags"]]};
initSearch(searchIndex);
